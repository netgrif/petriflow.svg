{"version":3,"file":"main.js","mappings":"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","sources":["./projects/example-app/src/app/app.component.ts","./projects/example-app/src/app/app.module.ts","./projects/example-app/src/app/petriflow-info-dialog/petriflow-info-dialog.component.ts","./projects/example-app/src/environments/environment.ts","./projects/example-app/src/main.ts","./projects/projects/petri-svg/src/lib/canvas/canvas-configuration.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/svg-objects/container.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/svg-objects/canvas-element.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/abstract-arc/arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/abstract-arc/place-transition-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/abstract-arc/transition-place-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/arrow-arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/circle-arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/double-arrow-arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/empty-circle-arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/arc-end/full-circle-arc-end.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/inhibitor-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/read-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/reset-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/regular-place-transition-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/arc/regular-transition-place-arc.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/svg-objects/node-element.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/svg-objects/labeled-object.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/place/place.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/place/static-place.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/svg-objects/empty-node.ts","./projects/projects/petri-svg/src/lib/canvas/svg-elements/transition/transition.ts","./projects/projects/petri-svg/src/lib/canvas/canvas.ts","./projects/petriflow-svg/src/lib/domain/canvas-element-collection.ts","./projects/petriflow-svg/src/lib/common.ts","./projects/petriflow-svg/src/lib/svg-elements/petriflow-node.ts","./projects/petriflow-svg/src/lib/petriflow-canvas-configuration.ts","./projects/petriflow-svg/src/lib/svg-elements/petriflow-place.ts","./projects/petriflow-svg/src/lib/svg-elements/petriflow-transition.ts","./projects/petriflow-svg/src/lib/svg-elements/petriflow-arc.ts","./projects/petriflow-svg/src/lib/svg-elements/arcs/petriflow-place-transition-arc.ts","./projects/petriflow-svg/src/lib/svg-elements/arcs/petriflow-transition-place-arc.ts","./projects/petriflow-svg/src/lib/svg-elements/arcs/petriflow-reset-arc.ts","./projects/petriflow-svg/src/lib/svg-elements/arcs/petriflow-read-arc.ts","./projects/petriflow-svg/src/lib/svg-elements/arcs/petriflow-inhibitor-arc.ts","./projects/petriflow-svg/src/lib/petriflow-canvas.service.ts","./projects/petriflow-svg/src/lib/factories/petriflow-canvas-factory.service.ts","./projects/petriflow-svg/src/lib/canvas-mode.ts","./projects/petriflow-svg/src/lib/services/petriflow-canvas-configuration.service.ts","./projects/petriflow-svg/src/lib/svg-elements/public-api.ts","./projects/petriflow-svg/src/lib/petriflow-canvas.ts","./projects/petriflow-svg/src/lib/petriflow-canvas.component.ts","./projects/petriflow-svg/src/lib/petriflow-canvas.component.html","./projects/petriflow-svg/src/lib/petriflow-canvas.module.ts","./projects/petriflow-svg/src/public-api.ts","./projects/petriflow-svg/src/netgrif-petriflow.svg.ts"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\nimport {\n    CanvasMode,\n    PetriflowCanvasConfigurationService,\n    PetriflowCanvasFactoryService,\n    PetriflowCanvasService\n} from 'petriflow-svg';\nimport {MatToolbar} from '@angular/material/toolbar';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PetriflowInfoDialogComponent} from './petriflow-info-dialog/petriflow-info-dialog.component';\n\n@Component({\n    selector: 'pf-app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n\n    @ViewChild(MatToolbar) toolbar: MatToolbar | undefined;\n    @ViewChild('canvasComponent') canvasComponent: ElementRef | undefined;\n    public _mode: CanvasMode | undefined;\n\n    constructor(private _petriflowCanvasService: PetriflowCanvasService, private _petriflowFactoryService: PetriflowCanvasFactoryService,\n                private _petriflowConfigService: PetriflowCanvasConfigurationService, public dialog: MatDialog) {\n        this._mode = _petriflowConfigService.mode;\n    }\n\n    ngAfterViewInit(): void {\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"Petriflow SVG canvas does not exists!\");\n        this._petriflowCanvasService.canvas.svg.onclick = (e) => {\n            this.addTransition(e);\n            this.addPlace(e);\n        };\n        if (!this.toolbar)\n            throw new Error(\"MatToolbar could not be found!\");\n        this._petriflowConfigService.addCanvasEvent(this._petriflowCanvasService.canvas.svg, this.toolbar);\n        this.toolbar._elementRef.nativeElement.onmouseenter = () => {\n            this._petriflowConfigService.deleteClipboard();\n        };\n    }\n\n    private addTransition($event: MouseEvent): void {\n        if (this._petriflowConfigService.mode === CanvasMode.CREATE_TRANSITION) {\n            const offset = this._petriflowCanvasService.getPanZoomOffset();\n            const transition = this._petriflowFactoryService.createTransition(new DOMPoint(($event.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1),\n                ($event.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1)));\n            this._petriflowConfigService.addTransitionEvents(transition);\n\n        }\n    }\n\n    private addPlace(e: MouseEvent) {\n        if (this._petriflowConfigService.mode === CanvasMode.CREATE_PLACE) {\n            const offset = this._petriflowCanvasService.getPanZoomOffset();\n            const place = this._petriflowFactoryService.createPlace(0, new DOMPoint((e.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1), (e.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1)));\n            this._petriflowConfigService.addPlaceEvents(place);\n        }\n    }\n\n    disablePreviousArcMode() {\n        if (this._petriflowFactoryService.arcLine) {\n            this._petriflowCanvasService.canvas?.container.removeChild(this._petriflowFactoryService.arcLine);\n            this._petriflowFactoryService.source = undefined;\n            this._petriflowFactoryService.arcLine = undefined;\n        }\n    }\n\n    changeCanvasMode(mode: CanvasMode, panzoomEnabled = true) {\n        this.disablePreviousArcMode();\n        this._petriflowConfigService.mode = mode;\n        if (panzoomEnabled && this._petriflowCanvasService.panzoom?.isPaused()) {\n            this._petriflowCanvasService.panzoom.resume();\n        } else if (!panzoomEnabled && !this._petriflowCanvasService.panzoom?.isPaused()) {\n            this._petriflowCanvasService.panzoom?.pause();\n        }\n    }\n\n    goToLink(url: string) {\n        window.open(url, '_blank');\n    }\n\n    resetPanZoom() {\n        this._petriflowCanvasService.panzoom?.moveTo(0, 0);\n        this._petriflowCanvasService.panzoom?.zoomAbs(0, 0, 1);\n    }\n\n    public get canvasMode(): typeof CanvasMode {\n        return CanvasMode;\n    }\n\n    openDialog() {\n        this.dialog.open(PetriflowInfoDialogComponent);\n    }\n}\n","import {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {RouterModule, Routes} from '@angular/router';\nimport {JoyrideModule} from 'ngx-joyride';\nimport {PetriflowCanvasModule} from 'petriflow-svg';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport { PetriflowInfoDialogComponent } from './petriflow-info-dialog/petriflow-info-dialog.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {HttpClientModule} from '@angular/common/http';\n\nconst appRoutes: Routes = [\n    {path: 'app', component: AppComponent},\n    {path: '**', redirectTo: 'app'}\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PetriflowInfoDialogComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FlexLayoutModule,\n        RouterModule.forRoot(appRoutes),\n        JoyrideModule.forRoot(),\n        PetriflowCanvasModule,\n        MatButtonModule,\n        MatIconModule,\n        MatButtonToggleModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatButtonModule,\n        HttpClientModule\n    ],\n    entryComponents: [PetriflowInfoDialogComponent],\n    bootstrap: [\n        AppComponent\n    ],\n})\nexport class AppModule {\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon('data', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/data.svg`));\n        matIconRegistry.addSvgIcon('cursor-default-outline', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/cursor-default-outline.svg`));\n        matIconRegistry.addSvgIcon('transition', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/transition.svg`));\n        matIconRegistry.addSvgIcon('place', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/place.svg`));\n        matIconRegistry.addSvgIcon('marking', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/marking.svg`));\n        matIconRegistry.addSvgIcon('arc', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/arc.svg`));\n        matIconRegistry.addSvgIcon('arcweight', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/arcweight.svg`));\n        matIconRegistry.addSvgIcon('arcdataref', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/arcdataref.svg`));\n        matIconRegistry.addSvgIcon('arcplaceref', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/arcplaceref.svg`));\n        matIconRegistry.addSvgIcon('resetarc', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/resetarc.svg`));\n        matIconRegistry.addSvgIcon('inhibitor', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/inhibitor.svg`));\n        matIconRegistry.addSvgIcon('read', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/read.svg`));\n        matIconRegistry.addSvgIcon('properties', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/modeler/icons/properties.svg`));\n        matIconRegistry.addSvgIcon('github', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/github.svg`));\n        matIconRegistry.addSvgIcon('netgrif_logo', domSanitizer.bypassSecurityTrustResourceUrl(`../assets/netgrif_logo.svg`));\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'pf-app-info-dialog',\n    templateUrl: './petriflow-info-dialog.component.html',\n    styleUrls: ['./petriflow-info-dialog.component.scss']\n})\nexport class PetriflowInfoDialogComponent {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  deployUrl: '/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class CanvasConfiguration {\n    public static SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    public static COLORS = {\n        ACTIVE: 'blue',\n        INACTIVE: 'black'\n    };\n    public static RADIUS = 18;\n    public static SIZE = 36;\n    public static ICON_SIZE = 25;\n    public static TOKEN_RADIUS = 3;\n    public static TOKEN_OFFSET = 7;\n    public static FONT = {\n        FAMILY: 'verdana',\n        SIZE: 12,\n        SIZE_OFFSET: 18\n    };\n    public static ARROW_HEAD_SIZE = 5;\n    public static WEIGHT_OFFSET = 10;\n}\n","import {CanvasConfiguration} from '../../canvas-configuration';\n\nexport abstract class Container {\n\n    private _container: SVGGElement;\n\n    protected constructor() {\n        this._container = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'g') as SVGGElement;\n    }\n\n    get container(): SVGGElement {\n        return this._container;\n    }\n\n    set container(value: SVGGElement) {\n        this._container = value;\n    }\n}\n","import {Activable} from '../activable';\nimport {Container} from './container';\n\nexport abstract class CanvasElement extends Container implements Activable {\n\n    private _isSelected = false;\n\n    public static pointsToString(...points: Array<DOMPoint>): string {\n        return points.map(p => `${p.x},${p.y}`).join(' ') + ' ';\n    }\n\n    abstract activate(): void;\n\n    abstract deactivate(): void;\n\n    isEnclosedByRectangle(rectangle: SVGRect): boolean {\n        const canvasElementBox = this.container.getBBox();\n        return !(rectangle.x > canvasElementBox.x + canvasElementBox.width ||\n            canvasElementBox.x > rectangle.x + rectangle.width ||\n            rectangle.y > canvasElementBox.y + canvasElementBox.height ||\n            canvasElementBox.y > rectangle.y + rectangle.height);\n    }\n\n    abstract moveBy(e: number, f: number): void;\n\n    abstract clone(): CanvasElement | undefined;\n\n    isSelected(): boolean {\n        return this._isSelected;\n    }\n\n    setSelected(value: boolean) {\n        this._isSelected = value;\n    }\n}\n","import {CanvasConfiguration} from '../../../canvas-configuration';\nimport {CanvasElement} from '../../svg-objects/canvas-element';\nimport {NodeElement} from '../../svg-objects/node-element';\n\nexport abstract class Arc extends CanvasElement {\n    private _start: NodeElement;\n    private _end: NodeElement;\n    private _arcLineBackground: SVGPolylineElement;\n    private _arcLine: SVGPolylineElement;\n    private _multiplicityElement: SVGTextElement;\n    private _multiplicity: Text;\n    private _linePoints: Array<DOMPoint>;\n\n    protected constructor(start: NodeElement, end: NodeElement, endId: string, linePoints?: Array<DOMPoint>, multiplicityLabel?: string) {\n        super();\n        this._start = start;\n        this._end = end;\n        this._linePoints = [];\n\n        this._arcLineBackground = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polyline') as SVGPolylineElement;\n        this._arcLineBackground.setAttributeNS(null, 'fill', 'none');\n        this._arcLineBackground.setAttributeNS(null, 'stroke', 'white');\n        this._arcLineBackground.setAttributeNS(null, 'stroke-width', '4');\n        this.container.appendChild(this._arcLineBackground);\n\n        this._arcLine = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polyline') as SVGPolylineElement;\n        this._arcLine.setAttributeNS(null, 'fill', 'none');\n        this._arcLine.setAttributeNS(null, 'stroke', 'black');\n        this._arcLine.setAttributeNS(null, 'stroke-width', '2');\n        this._arcLine.setAttributeNS(null, 'marker-end', `url(#${endId})`);\n        this.container.appendChild(this._arcLine);\n\n        this._multiplicityElement = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'text') as SVGTextElement;\n        this._multiplicityElement.setAttributeNS(null, 'font-size', `${CanvasConfiguration.FONT.SIZE}`);\n        this._multiplicityElement.setAttributeNS(null, 'font-family', CanvasConfiguration.FONT.FAMILY);\n        this._multiplicity = document.createTextNode(multiplicityLabel ?? '');\n        this._multiplicityElement.appendChild(this._multiplicity);\n        this.container.appendChild(this._multiplicityElement);\n\n        start.arcs.push(this);\n        end.arcs.push(this);\n\n        if (linePoints && linePoints.length > 0) {\n            this._linePoints.push(...linePoints);\n        }\n\n        this.move(start, end);\n    }\n\n    activate() {\n        this.arcLine.setAttributeNS(null, 'class', 'svg-active-stroke');\n        this.multiplicityElement.setAttributeNS(null, 'class', 'svg-active-fill');\n    }\n\n    deactivate() {\n        this.arcLine.setAttributeNS(null, 'class', 'svg-inactive-stroke');\n        this.multiplicityElement.setAttributeNS(null, 'class', 'svg-inactive-fill');\n    }\n\n    move(start: NodeElement, end: NodeElement) {\n        const points = [start.position].concat(this._linePoints).concat(end.position);\n        const backgroundPoints = Object.assign([] as DOMPoint[], points);\n        points[0] = start.getEdgeIntersection(points[1], 0);\n        points[points.length - 1] = end.getEdgeIntersection(points[points.length - 2], 1);\n        const arcLinePoints = points.map(p => `${p.x},${p.y}`).join(' ');\n\n        backgroundPoints[0] = start.getEdgeIntersection(points[1], 2);\n        backgroundPoints[points.length - 1] = end.getEdgeIntersection(points[points.length - 2], 2);\n        this._arcLine.setAttributeNS(null, 'points', arcLinePoints);\n        const arcLinePointsTest = backgroundPoints.map(p => `${p.x},${p.y}`).join(' ');\n        this._arcLineBackground.setAttributeNS(null, 'points', arcLinePointsTest);\n        const lastElement = this.arcLine.points.length - 1;\n        const middleElement = parseInt(String(lastElement / 2), 10);\n\n        const position = this.getArcWeightPosition(this.arcLine.points[middleElement], this.arcLine.points[middleElement + 1]);\n        this._multiplicityElement.setAttributeNS(null, 'x', `${position.x}`);\n        this._multiplicityElement.setAttributeNS(null, 'y', `${position.y}`);\n    }\n\n    getArcWeightPosition(startElement: SVGPoint, endElement: SVGPoint): DOMPoint {\n        const startPointX = startElement.x;\n        const startPointY = startElement.y;\n        const endPointX = endElement.x;\n        const endPointY = endElement.y;\n\n        const dx = (endPointX - startPointX) / 2;\n        const dy = (endPointY - startPointY) / 2;\n\n        const length = Math.sqrt(dx * dx + dy * dy);\n        const unitDx = dx / length;\n        const unitDy = dy / length;\n        let x;\n        let y;\n\n        if (dx >= 0 && dy >= 0) {\n            x = (endPointX - dx + unitDy * CanvasConfiguration.WEIGHT_OFFSET);\n            y = (endPointY - dy - unitDx * CanvasConfiguration.WEIGHT_OFFSET);\n        }\n        if (dx >= 0 && dy < 0) {\n            x = (endPointX - dx - unitDy * CanvasConfiguration.WEIGHT_OFFSET);\n            y = (endPointY - dy + unitDx * CanvasConfiguration.WEIGHT_OFFSET);\n        }\n        if (dx < 0 && dy > 0) {\n            x = (endPointX - dx + unitDy * CanvasConfiguration.WEIGHT_OFFSET);\n            y = (endPointY - dy - unitDx * CanvasConfiguration.WEIGHT_OFFSET);\n        }\n        if (dx < 0 && dy <= 0) {\n            x = (endPointX - dx - unitDy * CanvasConfiguration.WEIGHT_OFFSET);\n            y = (endPointY - dy + unitDx * CanvasConfiguration.WEIGHT_OFFSET);\n        }\n        return new DOMPoint(x, y);\n    }\n\n    moveBy(x: number, y: number): void {\n        this.linePoints.forEach(point => {\n            point.x = point.x + x;\n            point.y = point.y + y;\n        });\n        this.move(this.start, this.end);\n    }\n\n    isEnclosedByRectangle(rectangle: SVGRect): boolean {\n        console.debug(\"By default the rectangle argument is ignored. Ignoring passed object.\", rectangle)\n        this.setSelected(this.start.isSelected() && this.end.isSelected());\n        return this.isSelected();\n    }\n\n    get arcLineBackground(): SVGPolylineElement {\n        return this._arcLineBackground;\n    }\n\n    set arcLineBackground(value: SVGPolylineElement) {\n        this._arcLineBackground = value;\n    }\n\n    get arcLine(): SVGPolylineElement {\n        return this._arcLine;\n    }\n\n    set arcLine(value: SVGPolylineElement) {\n        this._arcLine = value;\n    }\n\n    get multiplicityElement(): SVGTextElement {\n        return this._multiplicityElement;\n    }\n\n    set multiplicityElement(value: SVGTextElement) {\n        this._multiplicityElement = value;\n    }\n\n    get multiplicity(): Text {\n        return this._multiplicity;\n    }\n\n    set multiplicity(value: Text) {\n        this._multiplicity = value;\n    }\n\n    get linePoints(): Array<DOMPoint> {\n        return this._linePoints;\n    }\n\n    set linePoints(value: Array<DOMPoint>) {\n        this._linePoints = value;\n    }\n\n    get start(): NodeElement {\n        return this._start;\n    }\n\n    set start(value: NodeElement) {\n        this._start = value;\n    }\n\n    get end(): NodeElement {\n        return this._end;\n    }\n\n    set end(value: NodeElement) {\n        this._end = value;\n    }\n}\n","import {Arc} from './arc';\n\nexport abstract class PlaceTransitionArc extends Arc {\n\n}\n","import {Arc} from './arc';\n\nexport abstract class TransitionPlaceArc extends Arc {\n}\n","import {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport abstract class ArcEnd {\n\n    private _arrow: SVGMarkerElement;\n\n    protected constructor(id: string, height: number, width: number, refX: number, refY: number) {\n        this._arrow = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'marker') as SVGMarkerElement;\n        this._arrow.setAttributeNS(null, 'id', id);\n        this._arrow.setAttributeNS(null, 'markerHeight', `${height}`);\n        this._arrow.setAttributeNS(null, 'markerWidth', `${width}`);\n        this._arrow.setAttributeNS(null, 'refX', `${refX}`);\n        this._arrow.setAttributeNS(null, 'refY', `${refY}`);\n        this._arrow.setAttributeNS(null, 'orient', 'auto');\n        this._arrow.setAttributeNS(null, 'overflow', `visible`);\n    }\n\n    get arrow(): SVGMarkerElement {\n        return this._arrow;\n    }\n\n    set arrow(arrow: SVGMarkerElement) {\n        this._arrow = arrow;\n    }\n\n    abstract activate(): void;\n\n    abstract deactivate(): void;\n}\n","import {ArcEnd} from './arc-end';\nimport {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport class ArrowArcEnd extends ArcEnd {\n\n    public static readonly ID = 'arc_end_arrow';\n\n    private readonly _arrowHead: SVGPolygonElement;\n\n    constructor() {\n        super(ArrowArcEnd.ID, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE - 1, CanvasConfiguration.ARROW_HEAD_SIZE / 2);\n        this._arrowHead = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polygon') as SVGPolygonElement;\n        this._arrowHead.setAttributeNS(null, 'points', `0,0 ${CanvasConfiguration.ARROW_HEAD_SIZE},${CanvasConfiguration.ARROW_HEAD_SIZE / 2} 0,${CanvasConfiguration.ARROW_HEAD_SIZE}`);\n        this.arrow.appendChild(this._arrowHead);\n    }\n\n    activate() {\n        this.arrow.setAttributeNS(null, 'class', 'svg-active-fill svg-active-stroke');\n    }\n\n    deactivate() {\n        this.arrow.setAttributeNS(null, 'class', 'svg-inactive-fill svg-inactive-stroke');\n    }\n}\n","import {ArcEnd} from './arc-end';\nimport {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport abstract class CircleArcEnd extends ArcEnd {\n\n    private readonly _circle: SVGCircleElement;\n\n    protected constructor(id: string) {\n        super(id, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE / 2, 0);\n\n        this._circle = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'circle') as SVGCircleElement;\n        this._circle.setAttributeNS(null, 'r', `${CanvasConfiguration.ARROW_HEAD_SIZE / 2}`);\n        this.arrow.appendChild(this._circle);\n    }\n\n    get circle(): SVGCircleElement {\n        return this._circle;\n    }\n}\n","import {ArcEnd} from './arc-end';\nimport {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport class DoubleArrowArcEnd extends ArcEnd {\n\n    public static readonly ID = 'arc_end_double_arrow';\n\n    private readonly _arrowHead: SVGPolygonElement;\n\n    constructor() {\n        super(DoubleArrowArcEnd.ID, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE, CanvasConfiguration.ARROW_HEAD_SIZE - 1, CanvasConfiguration.ARROW_HEAD_SIZE / 2);\n        this._arrowHead = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polygon') as SVGPolygonElement;\n        this._arrowHead.setAttributeNS(null, 'points', `0,0 ${CanvasConfiguration.ARROW_HEAD_SIZE},${CanvasConfiguration.ARROW_HEAD_SIZE / 2} 0,${CanvasConfiguration.ARROW_HEAD_SIZE}`);\n        const secondArrow = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polygon') as SVGPolygonElement;\n        secondArrow.setAttributeNS(null, 'points', `${-CanvasConfiguration.ARROW_HEAD_SIZE + 1},0 1,${CanvasConfiguration.ARROW_HEAD_SIZE / 2} ${-CanvasConfiguration.ARROW_HEAD_SIZE + 1},${CanvasConfiguration.ARROW_HEAD_SIZE}`);\n\n        this.arrow.appendChild(this._arrowHead);\n        this.arrow.appendChild(secondArrow);\n    }\n\n    activate(): void {\n        this._arrowHead.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.ACTIVE);\n    }\n\n    deactivate(): void {\n        this._arrowHead.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.INACTIVE);\n    }\n}\n","import {CircleArcEnd} from './circle-arc-end';\nimport {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport class EmptyCircleArcEnd extends CircleArcEnd {\n\n    public static readonly ID = 'arc_end_circle_empty';\n\n    constructor() {\n        super(EmptyCircleArcEnd.ID);\n        this.circle.setAttributeNS(null, 'fill', 'white');\n        this.deactivate();\n    }\n\n    activate(): void {\n        this.circle.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.ACTIVE);\n    }\n\n    deactivate(): void {\n        this.circle.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.INACTIVE);\n    }\n}\n","import {CircleArcEnd} from './circle-arc-end';\nimport {CanvasConfiguration} from '../../../canvas-configuration';\n\nexport class FullCircleArcEnd extends CircleArcEnd {\n\n    public static readonly ID = 'read_arc_end';\n\n    constructor() {\n        super(FullCircleArcEnd.ID);\n        this.deactivate();\n    }\n\n    activate(): void {\n        this.circle.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.ACTIVE);\n        this.circle.setAttributeNS(null, 'fill', CanvasConfiguration.COLORS.ACTIVE);\n    }\n\n    deactivate(): void {\n        this.circle.setAttributeNS(null, 'stroke', CanvasConfiguration.COLORS.INACTIVE);\n        this.circle.setAttributeNS(null, 'fill', CanvasConfiguration.COLORS.INACTIVE);\n    }\n}\n","import {PlaceTransitionArc} from './abstract-arc';\nimport {ArcEnd, EmptyCircleArcEnd} from './arc-end';\nimport {NodeElement} from '../svg-objects';\n\nexport class InhibitorArc extends PlaceTransitionArc {\n\n    public static readonly ID = 'arc_end_circle_empty';\n\n    constructor(start: NodeElement, end: NodeElement, linePoints?: Array<DOMPoint>, multiplicityLabel?: string | null) {\n        super(start, end, InhibitorArc.ID, linePoints, multiplicityLabel ?? '');\n    }\n\n    createArcEnd(): ArcEnd {\n        return new EmptyCircleArcEnd();\n    }\n\n    clone(): InhibitorArc | undefined {\n        return new InhibitorArc(this.start, this.end, this.linePoints, this.multiplicity?.textContent);\n    }\n}\n","import {PlaceTransitionArc} from './abstract-arc/place-transition-arc';\nimport {ArcEnd} from './arc-end/arc-end';\nimport {FullCircleArcEnd} from './arc-end/full-circle-arc-end';\nimport {NodeElement} from '../svg-objects/node-element';\n\nexport class ReadArc extends PlaceTransitionArc {\n\n    public static readonly ID = 'read_arc_end';\n\n    constructor(start: NodeElement, end: NodeElement, linePoints?: Array<DOMPoint>, multiplicityLabel?: string | null) {\n        super(start, end, ReadArc.ID, linePoints, multiplicityLabel ?? '');\n    }\n\n    createArcEnd(): ArcEnd {\n        return new FullCircleArcEnd();\n    }\n\n    clone(): ReadArc | undefined {\n        return new ReadArc(this.start, this.end, this.linePoints, this.multiplicity?.textContent);\n    }\n}\n","import {PlaceTransitionArc} from './abstract-arc/place-transition-arc';\nimport {ArcEnd} from './arc-end/arc-end';\nimport {DoubleArrowArcEnd} from './arc-end/double-arrow-arc-end';\nimport {NodeElement} from '../svg-objects/node-element';\n\nexport class ResetArc extends PlaceTransitionArc {\n\n    public static readonly ID = 'arc_end_double_arrow';\n\n    constructor(start: NodeElement, end: NodeElement, linePoints?: Array<DOMPoint>, multiplicityLabel?: string | null) {\n        super(start, end, ResetArc.ID, linePoints, multiplicityLabel ?? '');\n    }\n\n    createArcEnd(): ArcEnd {\n        return new DoubleArrowArcEnd();\n    }\n\n    clone(): ResetArc | undefined {\n        return new ResetArc(this.start, this.end, this.linePoints, this.multiplicity?.textContent);\n    }\n}\n","import {PlaceTransitionArc} from './abstract-arc/place-transition-arc';\nimport {ArcEnd} from './arc-end/arc-end';\nimport {ArrowArcEnd} from './arc-end/arrow-arc-end';\nimport {NodeElement} from '../svg-objects/node-element';\n\nexport class RegularPlaceTransitionArc extends PlaceTransitionArc {\n\n    public static readonly ID = 'arc_end_arrow';\n\n    constructor(start: NodeElement, end: NodeElement, linePoints?: Array<DOMPoint>, multiplicityLabel?: string | null) {\n        super(start, end, RegularPlaceTransitionArc.ID, linePoints, multiplicityLabel ?? '');\n    }\n\n    createArcEnd(): ArcEnd {\n        return new ArrowArcEnd();\n    }\n\n    clone(): RegularPlaceTransitionArc | undefined {\n        return new RegularPlaceTransitionArc(this.start, this.end, this.linePoints, this.multiplicity?.textContent);\n    }\n\n}\n","import {TransitionPlaceArc} from './abstract-arc';\nimport {ArcEnd, ArrowArcEnd} from './arc-end';\nimport {NodeElement} from '../svg-objects';\n\nexport class RegularTransitionPlaceArc extends TransitionPlaceArc {\n\n    public static readonly ID = 'arc_end_arrow';\n\n    constructor(start: NodeElement, end: NodeElement, linePoints?: Array<DOMPoint>, multiplicityLabel?: string | null) {\n        super(start, end, RegularTransitionPlaceArc.ID, linePoints, multiplicityLabel ?? '');\n    }\n\n    createArcEnd(): ArcEnd {\n        return new ArrowArcEnd();\n    }\n\n    clone(): RegularTransitionPlaceArc | undefined {\n        return new RegularTransitionPlaceArc(this.start, this.end, this.linePoints, this.multiplicity?.textContent);\n    }\n}\n","import {CanvasElement} from './canvas-element';\nimport {Arc} from '../arc';\nimport {CanvasConfiguration} from \"../../canvas-configuration\";\n\nexport abstract class NodeElement extends CanvasElement {\n\n    private _element: SVGGeometryElement;\n    private _position: DOMPoint;\n    private _arcs: Array<Arc>;\n\n    constructor(position: DOMPoint) {\n        super();\n        this._arcs = [];\n        this._position = position;\n        this._element = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'rect') as SVGRectElement;\n    }\n\n    move(position: DOMPoint) {\n        this._position = position;\n        this.arcs.forEach(arc => {\n            arc.move(arc.start, arc.end);\n        });\n    }\n\n    deleteArcs(arcs: Array<Arc>) {\n        arcs.forEach(arc => {\n            const index = this.arcs.indexOf(arc);\n            if (index !== -1) {\n                this.arcs.splice(index, 1);\n            }\n        });\n    }\n\n    moveBy(x: number, y: number) {\n        const moveTo = new DOMPoint(this.position.x + x, this.position.y + y);\n        this.move(moveTo);\n    }\n\n    /**\n     * Calculates point on the edge of this element where a straight line leading from given point to the center\n     * (position) of this element intersects with the edge of this element.\n     *\n     * Use this function to calculate ending point for arcs where the arrow should be rendered.\n     *\n     * @param from start of the line\n     * @param offset intersection by offset\n     */\n    public abstract getEdgeIntersection(from: DOMPoint, offset: number): DOMPoint;\n\n    get position(): DOMPoint {\n        return this._position;\n    }\n\n    get arcs(): Array<Arc> {\n        return this._arcs;\n    }\n\n    set arcs(value: Array<Arc>) {\n        this._arcs = value;\n    }\n\n    get element(): SVGGeometryElement {\n        return this._element;\n    }\n\n    set element(value: SVGGeometryElement) {\n        this._element = value;\n    }\n\n    isEnclosedByRectangle(rectangle: SVGRect): boolean {\n        this.setSelected(super.isEnclosedByRectangle(rectangle));\n        return this.isSelected();\n    }\n}\n","import { CanvasConfiguration } from '../../canvas-configuration';\nimport {Movable} from '../movable';\nimport {NodeElement} from './node-element';\n\nexport abstract class LabeledObject extends NodeElement implements Movable {\n\n    private _id: string;\n    private _labelElement: SVGTextElement;\n    private _label: Text;\n    private _labelBackground: SVGRectElement;\n\n    protected constructor(id: string, label: string, position: DOMPoint) {\n        super(position);\n        this._labelBackground = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'rect') as SVGRectElement;\n        this._labelBackground.setAttributeNS(null, 'width', '0');\n        this._labelBackground.setAttributeNS(null, 'height', `${CanvasConfiguration.FONT.SIZE}`);\n        this._labelBackground.setAttributeNS(null, 'fill-opacity', '0.7');\n        this._labelBackground.setAttributeNS(null, 'fill', 'white');\n        this.container.appendChild(this._labelBackground);\n\n        this._labelElement = (document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'text') as unknown) as SVGTextElement;\n        this._labelElement.setAttributeNS(null, 'font-size', String(CanvasConfiguration.FONT.SIZE));\n        this._labelElement.setAttributeNS(null, 'font-family', CanvasConfiguration.FONT.FAMILY);\n        this._labelElement.setAttributeNS(null, 'text-anchor', 'middle');\n        this._label = document.createTextNode(label);\n        this._labelElement.appendChild(this._label);\n\n        this._id = id;\n        this.container.appendChild(this._labelElement);\n\n        this.setLabelElementPosition(position);\n    }\n\n    private setLabelElementPosition(position: DOMPoint) {\n        this._labelElement.setAttributeNS(null, 'x', `${position.x}`);\n        this._labelElement.setAttributeNS(null, 'y', `${position.y + CanvasConfiguration.SIZE}`);\n        this._labelBackground.setAttributeNS(null, 'x', `${position.x}`);\n        this._labelBackground.setAttributeNS(null, 'y', `${position.y + CanvasConfiguration.SIZE}`);\n    }\n\n    activate() {\n        this._labelElement.setAttributeNS(null, 'class', 'svg-active-fill');\n    }\n\n    deactivate() {\n        this._labelElement.setAttributeNS(null, 'class', 'svg-inactive-fill');\n    }\n\n    move(position: DOMPoint): void {\n        super.move(position);\n        this.setLabelElementPosition(position);\n    }\n\n    get labelElement(): SVGTextElement {\n        return this._labelElement;\n    }\n\n    set labelElement(value: SVGTextElement) {\n        this._labelElement = value;\n    }\n\n    get label(): Text {\n        return this._label;\n    }\n\n    set label(value: Text) {\n        this._label = value;\n    }\n\n    get labelBackground(): SVGRectElement {\n        return this._labelBackground;\n    }\n\n    set labelBackground(value: SVGRectElement) {\n        this._labelBackground = value;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value;\n        this._label.textContent = value;\n    }\n}\n","import {CanvasConfiguration} from '../../canvas-configuration';\nimport {LabeledObject} from '../svg-objects/labeled-object';\n\nexport class Place extends LabeledObject {\n    private static readonly TOKEN_OFFSETS = [[0, 0], [1, 1], [-1, 1], [1, -1], [-1, -1], [-1, 0], [1, 0], [0, -1], [0, 1]];\n    private static readonly TOKEN_LAYOUTS = [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 1, 1, 0, 0, 0, 0, 0],\n        [1, 0, 1, 1, 0, 0, 0, 0, 0],\n        [0, 1, 1, 1, 1, 0, 0, 0, 0],\n        [1, 1, 1, 1, 1, 0, 0, 0, 0],\n        [0, 1, 1, 1, 1, 1, 1, 0, 0],\n        [1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1],\n    ];\n    private _markingTokens: Array<SVGCircleElement>;\n    private _markingElement: SVGTextElement;\n    private _marking: Text;\n    private _tokensCount: number;\n\n    constructor(id: string, label: string, marking: number, position: DOMPoint) {\n        super(id, label, position);\n        this.element = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'circle') as SVGCircleElement;\n        this.element.id = `svg_place_${id}`;\n        this.element.setAttributeNS(null, 'r', `${CanvasConfiguration.RADIUS}`);\n        this.element.setAttributeNS(null, 'stroke-width', '2');\n        this.element.setAttributeNS(null, 'fill', 'white');\n        this.container.appendChild(this.element);\n        this._tokensCount = marking;\n\n        this._markingTokens = [];\n        for (let i = 0; i < 9; i++) {\n            this._markingTokens[i] = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'circle') as SVGCircleElement;\n            this._markingTokens[i].setAttributeNS(null, 'r', (CanvasConfiguration.TOKEN_RADIUS).toString());\n            this.container.appendChild(this._markingTokens[i]);\n        }\n\n        this._markingElement = (document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'text') as unknown) as SVGTextElement;\n        this._markingElement.setAttributeNS(null, 'font-size', `${CanvasConfiguration.FONT.SIZE}`);\n        this._markingElement.setAttributeNS(null, 'font-family', CanvasConfiguration.FONT.FAMILY);\n        this._markingElement.setAttributeNS(null, 'text-anchor', 'middle');\n        this._markingElement.setAttributeNS(null, 'dominant-baseline', 'middle');\n        this._marking = document.createTextNode('');\n        this._markingElement.appendChild(this._marking);\n        this.container.appendChild(this._markingElement);\n        this.updateMarking(marking);\n\n        this.move(position);\n        this.deactivate();\n    }\n\n    markingToString(marking: number): string {\n        if (this.tokensVisible(marking)) {\n            return '';\n        } else {\n            return `${marking}`;\n        }\n    }\n\n    tokensVisible(marking: number) {\n        return marking >= 0 && marking <= 9;\n    }\n\n    activate(): void {\n        super.activate();\n        this.element.setAttributeNS(null, 'class', 'svg-active-stroke');\n    }\n\n    deactivate(): void {\n        super.deactivate();\n        this.element.setAttributeNS(null, 'stroke', 'black');\n        this.element.setAttributeNS(null, 'class', 'svg-inactive-stroke');\n    }\n\n    move(position: DOMPoint): void {\n        super.move(position);\n        this.setElementPosition(position);\n        for (let i = 0; i < 9; i++) {\n            this.setMarkingTokenPosition(i, position);\n        }\n    }\n\n    /**\n     * Calculates intersection using the [Circle-Line Intersection](https://mathworld.wolfram.com/Circle-LineIntersection.html)\n     * formula. Putting the circle center to position [0, 0] we can simplify the formula:\n     * ```\n     * x1 = from.x\n     * y1 = from.y\n     * x2 = 0\n     * y2 = 0\n     *\n     * dx = x2 - x1 = 0 - x1 = -x1\n     * dy = y2 - y1 = 0 - y1 = -y1\n     * dr = sqrt(dx^2 + dy^2)\n     * D = x1*y2 - x2*y1 = x1*0 - 0*y1 = 0\n     *\n     * x = (D*dy +- sgn(dy)*dx*sqrt(r^2 * dr^2 - D^2)) / dr^2 = (0*dy +- sgn(dy)*dx*sqrt(r^2 * dr^2 - 0^2)) / dr^2 = +-sgn(dy)*dx*sqrt(r^2 * dr^2) / dr^2\n     * y = (-D*dx +- abs(dy)*sqrt(r^2 * dr^2 - D^2)) / dr^2 = (-0*dx +- abs(dy)*sqrt(r^2 * dr^2 - 0^2)) / dr^2 = +-abs(dy)*sqrt(r^2 * dr^2) / dr^2\n     * ```\n     *\n     * After that use {@link getIntersectionCoordinate} to determine the correct coordinates.\n     */\n    getEdgeIntersection(from: DOMPoint, offset: number): DOMPoint {\n        const offsetFrom = new DOMPoint(from.x - this.position.x, from.y - this.position.y);\n        const r = CanvasConfiguration.RADIUS + offset;\n        const dx = 0 - offsetFrom.x;\n        const dy = 0 - offsetFrom.y;\n        const dr = Math.sqrt(dx * dx + dy * dy);\n        const x1 = (+this.sgn(dy) * dx * Math.sqrt(r * r * dr * dr)) / (dr * dr);\n        const x2 = (-this.sgn(dy) * dx * Math.sqrt(r * r * dr * dr)) / (dr * dr);\n        const y1 = (+Math.abs(dy) * Math.sqrt(r * r * dr * dr)) / (dr * dr);\n        const y2 = (-Math.abs(dy) * Math.sqrt(r * r * dr * dr)) / (dr * dr);\n        const point = new DOMPoint();\n        point.x = this.getIntersectionCoordinate(this.position.x, x1, x2, offsetFrom.x);\n        point.y = this.getIntersectionCoordinate(this.position.y, y1, y2, offsetFrom.y);\n        return point;\n    }\n\n    getIntersectionCoordinate(placeCoordinate: number, firstCoordinate: number, secondCoordinate: number, offset: number): number {\n        if (offset < 0) {\n            if (firstCoordinate < 0) {\n                return firstCoordinate + placeCoordinate;\n            } else {\n                return secondCoordinate + placeCoordinate;\n            }\n        } else {\n            if (firstCoordinate > 0) {\n                return firstCoordinate + placeCoordinate;\n            } else {\n                return secondCoordinate + placeCoordinate;\n            }\n        }\n    }\n\n    private sgn(n: number): number {\n        if (n < 0) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    private setElementPosition(position: DOMPoint) {\n        this.element.setAttributeNS(null, 'cx', `${position.x}`);\n        this.element.setAttributeNS(null, 'cy', `${position.y}`);\n        this._markingElement.setAttributeNS(null, 'x', `${position.x}`);\n        this._markingElement.setAttributeNS(null, 'y', `${position.y}`);\n    }\n\n    private setMarkingTokenPosition(i: number, position: DOMPoint) {\n        const offset = Place.TOKEN_OFFSETS[i];\n        this._markingTokens[i].setAttributeNS(null, 'cx', (position.x + offset[0] * CanvasConfiguration.TOKEN_OFFSET).toString());\n        this._markingTokens[i].setAttributeNS(null, 'cy', (position.y + offset[1] * CanvasConfiguration.TOKEN_OFFSET).toString());\n    }\n\n    updateMarking(marking: number) {\n        this._marking.nodeValue = this.markingToString(marking);\n        for (let i = 0; i < 9; i++) {\n            let fill;\n            if (this.tokensVisible(marking)) {\n                fill = Place.TOKEN_LAYOUTS[marking][i] === 1 ? 'black' : 'white';\n            } else {\n                fill = 'white';\n            }\n            this._markingTokens[i].setAttributeNS(null, 'fill', fill);\n        }\n        // TODO: setMarkingTokenPosition?\n    }\n\n    get markingTokens(): Array<SVGCircleElement> {\n        return this._markingTokens;\n    }\n\n    set markingTokens(value: Array<SVGCircleElement>) {\n        this._markingTokens = value;\n    }\n\n    get markingElement(): SVGTextElement {\n        return this._markingElement;\n    }\n\n    set markingElement(value: SVGTextElement) {\n        this._markingElement = value;\n    }\n\n    get marking(): Text {\n        return this._marking;\n    }\n\n    set marking(value: Text) {\n        this._marking = value;\n    }\n\n    get tokensCount(): number {\n        return this._tokensCount;\n    }\n\n    set tokensCount(value: number) {\n        this._tokensCount = value;\n    }\n\n    clone(): Place | undefined {\n        return new Place(this.id, this.label.data, this.tokensCount, this.position);\n    }\n}\n","import {Place} from './place';\n\nexport class StaticPlace extends Place {\n\n    activate() {\n        super.activate();\n        this.setStaticPlaceAttributes();\n    }\n\n    deactivate() {\n        super.deactivate();\n        this.setStaticPlaceAttributes();\n    }\n\n    private setStaticPlaceAttributes() {\n        this.element.setAttributeNS(null, 'class', 'svg-inactive-stroke');\n        this.element.setAttributeNS(null, 'fill', 'white');\n        this.element.setAttributeNS(null, 'stroke-dasharray', '14, 5');\n        this.element.setAttributeNS(null, 'stroke-width', '3');\n    }\n}\n","import {NodeElement} from './node-element';\nimport {CanvasElement} from './canvas-element';\n\nexport class EmptyNode extends NodeElement {\n\n    activate(): void {\n        // ignore\n    }\n\n    deactivate(): void {\n        // ignore\n    }\n\n    getEdgeIntersection(): DOMPoint {\n        return this.position;\n    }\n\n    clone(): CanvasElement | undefined {\n        return undefined;\n    }\n}\n","import {CanvasConfiguration} from '../../canvas-configuration';\nimport {CanvasElement, LabeledObject} from '../svg-objects';\n\nexport class Transition extends LabeledObject {\n\n    constructor(id: string, label: string, position: DOMPoint) {\n        super(id, label, position);\n        this.element = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'rect') as SVGRectElement;\n        this.element.id = `svg_transition_${id}`;\n        this.element.setAttributeNS(null, 'width', `${CanvasConfiguration.SIZE}`);\n        this.element.setAttributeNS(null, 'height', `${CanvasConfiguration.SIZE}`);\n        this.element.setAttributeNS(null, 'stroke', 'black');\n        this.element.setAttributeNS(null, 'stroke-width', '1');\n        this.container.appendChild(this.element);\n        this.move(position);\n    }\n\n    move(position: DOMPoint) {\n        super.move(position);\n        this.setElementPosition(position);\n    }\n\n    activate(): void {\n        super.activate();\n        this.element.setAttributeNS(null, 'class', 'svg-active-stroke');\n    }\n\n    deactivate(): void {\n        super.deactivate();\n        this.element.setAttributeNS(null, 'class', 'svg-inactive-stroke');\n        this.element.setAttributeNS(null, 'fill', 'white');\n        this.element.setAttributeNS(null, 'stroke-width', '2');\n    }\n\n    /**\n     * Calculates intersection of the rectangle using trigonometric functions (tan).\n     */\n    getEdgeIntersection(from: DOMPoint, offset: number): DOMPoint {\n        const offsetFrom = new DOMPoint(from.x - this.position.x, from.y - this.position.y);\n        const squareHalfSiteLength = CanvasConfiguration.SIZE / 2 + offset;\n\n        let tanTheta = Infinity;\n        if (offsetFrom.x !== 0) {\n            tanTheta = Math.abs(offsetFrom.y / offsetFrom.x);\n        }\n        const quadrantX = Math.sign(offsetFrom.x);\n        const quadrantY = Math.sign(offsetFrom.y);\n\n        if (tanTheta > 1) {\n            return new DOMPoint(this.position.x + (squareHalfSiteLength / tanTheta) * quadrantX, this.position.y + squareHalfSiteLength * quadrantY);\n        } else {\n            return new DOMPoint(this.position.x + squareHalfSiteLength * quadrantX, this.position.y + squareHalfSiteLength * tanTheta * quadrantY);\n        }\n    }\n\n    private setElementPosition(position: DOMPoint) {\n        this.element.setAttributeNS(null, 'x', `${position.x - CanvasConfiguration.SIZE / 2}`);\n        this.element.setAttributeNS(null, 'y', `${position.y - CanvasConfiguration.SIZE / 2}`);\n    }\n\n    setEnabled(firing: boolean) {\n        if (firing) {\n            this.element.setAttributeNS(null, 'class', 'svg-transition-firing');\n        } else {\n            this.element.setAttributeNS(null, 'class', 'svg-transition-enabled');\n        }\n    }\n\n    setDisabled() {\n        this.element.setAttributeNS(null, 'class', 'svg-transition-disabled');\n    }\n\n    cancelArrowPoints(position: DOMPoint): string {\n        return this.arrowPoints(position, -1);\n    }\n\n    finishArrowPoints(position: DOMPoint): string {\n        return this.arrowPoints(position, 1);\n    }\n\n    /**\n     * Create triangular arrow points used as cancel or finish button on transition\n     * @param position position of transition\n     * @param orientation 1 if the arrow should point to right (finish), -1 if it should point left (cancel)\n     */\n    arrowPoints(position: DOMPoint, orientation: number): string {\n        const x1 = position.x + (0.1 * CanvasConfiguration.SIZE / 2) * orientation;\n        const y1 = position.y - 0.8 * CanvasConfiguration.SIZE / 2;\n        const x2 = position.x + (0.1 * CanvasConfiguration.SIZE / 2) * orientation;\n        const y2 = position.y + 0.8 * CanvasConfiguration.SIZE / 2;\n        const x3 = position.x + (0.85 * CanvasConfiguration.SIZE / 2) * orientation;\n        return CanvasElement.pointsToString(new DOMPoint(x1, y1), new DOMPoint(x2, y2), new DOMPoint(x3, position.y));\n    }\n\n    clone(): CanvasElement | undefined {\n        return new Transition(this.id, this.label?.textContent ?? '', this.position);\n    }\n}\n","import {ArcEnd, CanvasElement, Container} from './svg-elements';\nimport {CanvasConfiguration} from './canvas-configuration';\n\nexport class Canvas extends Container {\n\n    private _svg: SVGSVGElement;\n    private readonly _defs: SVGDefsElement;\n\n    constructor(svg: SVGSVGElement) {\n        super();\n        this._svg = svg;\n        this._defs = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'defs') as SVGDefsElement;\n        this.svg.appendChild(this._defs);\n        this.svg.appendChild(this.container);\n    }\n\n    public add(object: CanvasElement): void {\n        this.container.appendChild(object.container);\n    }\n\n    public remove(element: CanvasElement): SVGGElement {\n        return this.container.removeChild(element.container);\n    }\n\n    public removeAll(): void {\n        this.container.childNodes.forEach(value => value.remove());\n    }\n\n    public register(arcEnd: ArcEnd): void {\n        this._defs.appendChild(arcEnd.arrow);\n    }\n\n    get svg(): SVGSVGElement {\n        return this._svg;\n    }\n\n    set svg(value: SVGSVGElement) {\n        this._svg = value;\n    }\n}\n","import {Arc, NodeElement} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../svg-elements/petriflow-arc';\nimport {PetriflowPlace} from '../svg-elements/petriflow-place';\nimport {PetriflowTransition} from '../svg-elements/petriflow-transition';\nimport {PetriflowNode} from '../svg-elements/petriflow-node';\nimport {PetriflowCanvasElement} from '../svg-elements/petriflow-canvas-element';\n\nexport class CanvasElementCollection {\n\n    private _places: Array<PetriflowPlace>;\n    private _transitions: Array<PetriflowTransition>;\n    private _arcs: Array<PetriflowArc<Arc>>;\n\n    constructor() {\n        this._places = [];\n        this._transitions = [];\n        this._arcs = [];\n    }\n\n    get places(): Array<PetriflowPlace> {\n        return this._places;\n    }\n\n    set places(value: Array<PetriflowPlace>) {\n        this._places = value;\n    }\n\n    get transitions(): Array<PetriflowTransition> {\n        return this._transitions;\n    }\n\n    set transitions(value: Array<PetriflowTransition>) {\n        this._transitions = value;\n    }\n\n    get arcs(): Array<PetriflowArc<Arc>> {\n        return this._arcs;\n    }\n\n    set arcs(value: Array<PetriflowArc<Arc>>) {\n        this._arcs = value;\n    }\n\n    get nodes(): Array<PetriflowNode<NodeElement>> {\n        return [...this._places, ...this._transitions];\n    }\n\n    get selected(): Array<PetriflowNode<NodeElement>> {\n        return [...this.nodes.filter(node => node.isSelected())];\n    }\n\n    get all(): Array<PetriflowCanvasElement> {\n        return [...this.nodes, ...this.arcs];\n    }\n}\n","import {Arc, NodeElement, Place, Transition} from '@netgrif/petri.svg';\nimport {PetriflowNode} from \"./svg-elements/petriflow-node\";\nimport {PetriflowArc} from \"./svg-elements/petriflow-arc\";\n\nexport type PetriflowNodeClickEventFunction = (element: PetriflowNode<NodeElement> | PetriflowArc<Arc>, e ?: Event) => void;\n\nexport function defaultPlace(): Place {\n    return new Place('0', '0', 0, new DOMPoint());\n}\n\nexport function defaultTransition(): Transition {\n    return new Transition('0', '0', new DOMPoint())\n}\n\nconst EMPTY_FUNCTION = () => {\n};\nexport {EMPTY_FUNCTION};\n","import {PetriflowCanvasElement} from './petriflow-canvas-element';\nimport {NodeElement} from '@netgrif/petri.svg';\nimport {PetriflowNodeClickEventFunction, EMPTY_FUNCTION} from \"../common\";\n\nexport abstract class PetriflowNode<T extends NodeElement> implements PetriflowCanvasElement {\n\n    protected _canvasElement: T;\n    protected _onClickEvent: PetriflowNodeClickEventFunction;\n\n    protected constructor(canvasElement: T) {\n        this._canvasElement = canvasElement;\n\n        canvasElement.element.onmouseenter = () => {\n            this.canvasElement.activate();\n        };\n        canvasElement.element.onmouseleave = () => {\n            if (!this.isSelected()) {\n                this.canvasElement.deactivate();\n            }\n        };\n        this._onClickEvent = EMPTY_FUNCTION;\n    }\n\n    setOnClick(event: PetriflowNodeClickEventFunction): void {\n        this.onClickEvent = event;\n        this.canvasElement.element.onclick = () => {\n            event(this);\n        };\n    }\n\n    isSelected(): boolean {\n        return this.canvasElement.isSelected();\n    }\n\n    deselect(): void {\n        this.canvasElement.setSelected(false);\n        this.canvasElement.deactivate();\n    }\n\n    select(): void {\n        this.canvasElement.setSelected(true);\n        this.canvasElement.activate();\n    }\n\n    getPosition(): DOMPoint {\n        return this.canvasElement.position;\n    }\n\n    activate(): void {\n        this.canvasElement.activate();\n    }\n\n    deactivate(): void {\n        this.canvasElement.deactivate();\n    }\n\n    isEnclosedByRectangle(rectangle: SVGRect): boolean {\n        return this.canvasElement.isEnclosedByRectangle(rectangle);\n    }\n\n    moveBy(x: number, y: number): void {\n        this.canvasElement.moveBy(x, y);\n    }\n\n    setSelected(value: boolean): void {\n        this.canvasElement.setSelected(value);\n    }\n\n    get canvasElement(): T {\n        return this._canvasElement;\n    }\n\n    set canvasElement(value: T) {\n        this._canvasElement = value;\n    }\n\n    get onClickEvent() {\n        return this._onClickEvent;\n    }\n\n    set onClickEvent(value) {\n        this._onClickEvent = value;\n    }\n\n    abstract clone(): PetriflowNode<NodeElement>;\n\n    abstract changeId(id: string): void;\n}\n","export class PetriflowCanvasConfiguration {\n    public static PANZOOM_MOVE = 10;\n    public static PANZOOM_ZOOM_IN_MULTIPLIER = 1.25;\n    public static PANZOOM_ZOOM_OUT_MULTIPLIER = 0.8;\n\n    public static TRANSITION_ID_COUNTER = 0;\n    public static PLACE_ID_COUNTER = 0;\n}\n","import {Place} from '@netgrif/petri.svg';\nimport {PetriflowNode} from './petriflow-node';\nimport {PetriflowCanvasConfiguration} from '../petriflow-canvas-configuration';\nimport {defaultPlace, EMPTY_FUNCTION, PetriflowNodeClickEventFunction} from \"../common\";\n\nexport class PetriflowPlace extends PetriflowNode<Place> {\n\n    private _onTokenClickEvent: PetriflowNodeClickEventFunction;\n\n    constructor(place: Place) {\n        super(place);\n        this.canvasElement.markingTokens.forEach(markingToken => {\n            this.setPlaceActions(markingToken);\n        });\n        this._onTokenClickEvent = EMPTY_FUNCTION;\n    }\n\n    private setPlaceActions(svgElement: SVGElement) {\n        svgElement.onmouseenter = () => {\n            this.canvasElement.activate();\n        };\n        svgElement.onmouseleave = () => {\n            if (!this.isSelected()) {\n                this.canvasElement.deactivate();\n            }\n        };\n    }\n\n    clone(): PetriflowPlace {\n        const cloned = new PetriflowPlace(this.canvasElement.clone() ?? defaultPlace());\n        cloned.canvasElement.element.onclick = () => this.onClickEvent(cloned);\n        cloned.canvasElement.markingTokens.forEach(token => {\n            token.onclick = () => this._onTokenClickEvent(cloned);\n        });\n        cloned.setOnClick((clone) => this.onClickEvent(clone));\n        cloned.setOnTokenClickEvent((clone) => this._onTokenClickEvent(clone));\n        cloned.changeId(`p${++PetriflowCanvasConfiguration.PLACE_ID_COUNTER}`);\n        return cloned;\n    }\n\n    setOnTokenClickEvent(event: PetriflowNodeClickEventFunction): void {\n        this._onTokenClickEvent = event;\n        this.canvasElement.markingTokens.forEach(token => {\n            token.onclick = () => {\n                event(this);\n            };\n        });\n    }\n\n    changeId(id: string): void {\n        this.canvasElement.id = `svg_place_${id}`;\n        this.canvasElement.label.textContent = id;\n    }\n}\n","import {PetriflowNode} from './petriflow-node';\nimport {CanvasConfiguration, Transition} from '@netgrif/petri.svg';\nimport {PetriflowCanvasConfiguration} from '../petriflow-canvas-configuration';\n\nexport class PetriflowTransition extends PetriflowNode<Transition> {\n\n    private _finishArrow: SVGPolygonElement;\n    private _cancelArrow: SVGPolygonElement;\n    private _iconElement: SVGTextElement | undefined;\n    private _icon: Text | undefined;\n\n    constructor(transition: Transition, icon?: string) {\n        super(transition);\n        this._cancelArrow = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polygon') as SVGPolygonElement;\n        this._cancelArrow.id = `svg_transition_start_${transition.id}`;\n        this._cancelArrow.setAttributeNS(null, 'fill', 'white');\n        this._cancelArrow.setAttributeNS(null, 'stroke', 'white');\n        this._cancelArrow.setAttributeNS(null, 'stroke-width', '2');\n        this.canvasElement.container.appendChild(this._cancelArrow);\n\n        this._finishArrow = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polygon') as SVGPolygonElement;\n        this._finishArrow.id = `svg_transition_finish_${transition.id}`;\n        this._finishArrow.setAttributeNS(null, 'fill', 'white');\n        this._finishArrow.setAttributeNS(null, 'stroke', 'white');\n        this._finishArrow.setAttributeNS(null, 'stroke-width', '2');\n        this.canvasElement.container.appendChild(this._finishArrow);\n\n        if (icon) {\n            this._iconElement = (document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'text') as unknown) as SVGTextElement;\n            this._iconElement.setAttributeNS(null, 'style', `font-family: Material Icons;font-size:${CanvasConfiguration.ICON_SIZE}`);\n            this._icon = document.createTextNode(icon);\n            this._iconElement.appendChild(this._icon);\n            this.canvasElement.container.appendChild(this._iconElement);\n        }\n        this.deactivate();\n    }\n\n    move(position: DOMPoint) {\n        this.canvasElement.move(position);\n        this._cancelArrow.setAttributeNS(null, 'points', this.canvasElement.cancelArrowPoints(position));\n        this._finishArrow.setAttributeNS(null, 'points', this.canvasElement.finishArrowPoints(position));\n        if (this._iconElement) {\n            this.setIconElementPosition(position);\n        }\n    }\n\n    activate(): void {\n        this.canvasElement.activate();\n        // this._cancelArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-cancel-active');\n        // this._finishArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-finish-active');\n    }\n\n    deactivate(): void {\n        this.canvasElement.deactivate();\n        this._cancelArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-cancel-inactive');\n        this._finishArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-finish-inactive');\n    }\n\n    private setIconElementPosition(position: DOMPoint) {\n        if (this._iconElement) {\n            this._iconElement.setAttributeNS(null, 'x', `${position.x - CanvasConfiguration.ICON_SIZE / 2}`);\n            this._iconElement.setAttributeNS(null, 'y', `${position.y + CanvasConfiguration.ICON_SIZE / 2}`);\n        }\n    }\n\n    setEnabled(firing: boolean) {\n        this.canvasElement.setEnabled(firing);\n        this.setIconFiringClass(firing);\n    }\n\n    setDisabled(firing: boolean) {\n        this.canvasElement.setDisabled();\n        this.setIconFiringClass(firing);\n    }\n\n    private setIconFiringClass(firing: boolean) {\n        if (firing) {\n            this._cancelArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-cancel-active');\n            this._finishArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-finish-active');\n            this._iconElement?.setAttributeNS(null, 'class', 'svg-icon-inactive');\n        } else {\n            this._cancelArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-cancel-inactive');\n            this._finishArrow.setAttributeNS(null, 'class', 'svg-fire-arrow-finish-inactive');\n            this._iconElement?.setAttributeNS(null, 'class', 'svg-icon-active');\n        }\n    }\n\n    deselect(): void {\n        this.setSelected(false);\n        this.deactivate();\n    }\n\n    select(): void {\n        this.setSelected(true);\n        this.activate();\n    }\n\n    get finishArrow(): SVGPolygonElement {\n        return this._finishArrow;\n    }\n\n    set finishArrow(value: SVGPolygonElement) {\n        this._finishArrow = value;\n    }\n\n    get cancelArrow(): SVGPolygonElement {\n        return this._cancelArrow;\n    }\n\n    set cancelArrow(value: SVGPolygonElement) {\n        this._cancelArrow = value;\n    }\n\n    get iconElement(): SVGTextElement | undefined {\n        return this._iconElement;\n    }\n\n    set iconElement(value: SVGTextElement | undefined) {\n        this._iconElement = value;\n    }\n\n    get icon(): Text | undefined {\n        return this._icon;\n    }\n\n    set icon(value: Text | undefined) {\n        this._icon = value;\n    }\n\n    clone(): PetriflowTransition {\n        const cloned = new PetriflowTransition(this.canvasElement.clone() as Transition);\n        cloned.canvasElement.element.onclick = () => this.onClickEvent(cloned);\n        cloned.setOnClick((clone) => this.onClickEvent(clone));\n        cloned.changeId(`t${++PetriflowCanvasConfiguration.TRANSITION_ID_COUNTER}`);\n        return cloned;\n    }\n\n    changeId(id: string): void {\n        this.canvasElement.id = `svg_transition_${id}`;\n        this.canvasElement.label.textContent = id;\n    }\n}\n","import {PetriflowCanvasElement} from './petriflow-canvas-element';\nimport {Arc, NodeElement} from '@netgrif/petri.svg';\nimport {PetriflowNodeClickEventFunction, EMPTY_FUNCTION} from \"../common\";\n\nexport abstract class PetriflowArc<T extends Arc> implements PetriflowCanvasElement {\n\n    protected _element: T;\n    protected _onClickEvent: PetriflowNodeClickEventFunction\n\n    protected constructor(element: T) {\n        this._element = element;\n        this._element.arcLine.onmouseenter = () => {\n            this.activate();\n        };\n        this._element.arcLine.onmouseleave = () => {\n            if (!this.isSelected()) {\n                this._element.deactivate();\n            }\n        };\n        this._onClickEvent = EMPTY_FUNCTION;\n    }\n\n    cloneArc(start: NodeElement, end: NodeElement): PetriflowArc<Arc> {\n        const newLinePoints: Array<DOMPoint> = [];\n        this.element.linePoints.forEach(point => newLinePoints.push(Object.assign({}, {\n            x: point.x,\n            y: point.y\n        } as DOMPoint)));\n        const cloned = this.createClonedInstanceOfArc(start, end, newLinePoints, this._element.multiplicity?.textContent ?? '');\n        cloned.element.arcLine.onclick = () => this._onClickEvent(cloned);\n        cloned.setOnClick((clone) => this._onClickEvent(clone));\n        return cloned;\n    }\n\n    abstract createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string): PetriflowArc<Arc>;\n\n    activate(): void {\n        this._element.activate();\n    }\n\n    isEnclosedByRectangle(rectangle: SVGRect): boolean {\n        return this._element.isEnclosedByRectangle(rectangle); // TODO\n    }\n\n    isSelected(): boolean {\n        return this._element.isSelected();\n    }\n\n    moveBy(x: number, y: number): void {\n        this._element.moveBy(x, y);\n    }\n\n    deselect(): void {\n        this.setSelected(false);\n        this._element.deactivate();\n    }\n\n    select(): void {\n        this.setSelected(true);\n        this.activate();\n    }\n\n    setSelected(value: boolean): void {\n        this._element.setSelected(value);\n    }\n\n    get element(): T {\n        return this._element;\n    }\n\n    set element(value: T) {\n        this._element = value;\n    }\n\n    getBreakPointList(): Array<DOMPoint> {\n        return this.element.linePoints;\n    }\n\n    setSource(source: NodeElement): void {\n        this.element.start = source;\n    }\n\n    setOnClick(eventFunction: PetriflowNodeClickEventFunction): void {\n        this._onClickEvent = eventFunction;\n        this.element.arcLine.onclick = (e) => {\n            eventFunction(this, e);\n        };\n    }\n}\n","import {NodeElement, RegularPlaceTransitionArc} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../petriflow-arc';\n\nexport class PetriflowPlaceTransitionArc extends PetriflowArc<RegularPlaceTransitionArc> {\n\n    constructor(arc: RegularPlaceTransitionArc) {\n        super(arc);\n    }\n\n    createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string) {\n        return new PetriflowPlaceTransitionArc(new RegularPlaceTransitionArc(start, end, points, multiplicity));\n    }\n}\n","import {NodeElement, RegularPlaceTransitionArc, RegularTransitionPlaceArc} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../petriflow-arc';\n\nexport class PetriflowTransitionPlaceArc extends PetriflowArc<RegularTransitionPlaceArc> {\n\n    constructor(arc: RegularPlaceTransitionArc) {\n        super(arc);\n    }\n\n    createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string) {\n        return new PetriflowTransitionPlaceArc(new RegularPlaceTransitionArc(start, end, points, multiplicity));\n    }\n}\n","import {NodeElement, ResetArc} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../petriflow-arc';\n\nexport class PetriflowResetArc extends PetriflowArc<ResetArc> {\n\n    constructor(arc: ResetArc) {\n        super(arc);\n    }\n\n    createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string) {\n        return new PetriflowResetArc(new ResetArc(start, end, points, multiplicity));\n    }\n}\n","import {NodeElement, ReadArc} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../petriflow-arc';\n\nexport class PetriflowReadArc extends PetriflowArc<ReadArc> {\n\n    constructor(arc: ReadArc) {\n        super(arc);\n    }\n\n    createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string) {\n        return new PetriflowReadArc(new ReadArc(start, end, points, multiplicity));\n    }\n}\n","import {InhibitorArc, NodeElement} from '@netgrif/petri.svg';\nimport {PetriflowArc} from '../petriflow-arc';\n\nexport class PetriflowInhibitorArc extends PetriflowArc<InhibitorArc> {\n\n    constructor(arc: InhibitorArc) {\n        super(arc);\n    }\n\n    createClonedInstanceOfArc(start: NodeElement, end: NodeElement, points: Array<DOMPoint>, multiplicity: string) {\n        return new PetriflowInhibitorArc(new InhibitorArc(start, end, points, multiplicity));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {PanZoom, Transform} from 'panzoom';\nimport {PetriflowCanvas} from './petriflow-canvas';\nimport {CanvasElementCollection} from './domain/canvas-element-collection';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PetriflowCanvasService {\n\n    private _canvas: PetriflowCanvas | undefined;\n    private readonly _petriflowElementsCollection: CanvasElementCollection;\n    private _petriflowClipboardElementsCollection: CanvasElementCollection;\n    private _panzoom: PanZoom | undefined;\n\n    constructor() {\n        this._petriflowElementsCollection = new CanvasElementCollection();\n        this._petriflowClipboardElementsCollection = new CanvasElementCollection();\n    }\n\n    setSelectedByRectangleEnclosure(rectangle: SVGElement) {\n        if (!this._canvas) return;\n        const newRect = this._canvas.svg.createSVGRect();\n        newRect.x = +(rectangle.getAttribute('x') ?? 0);\n        newRect.y = +(rectangle.getAttribute('y') ?? 0);\n        newRect.width = +(rectangle.getAttribute('width') ?? 0);\n        newRect.height = +(rectangle.getAttribute('height') ?? 0);\n        this._petriflowElementsCollection.all.forEach(petriflowElement => {\n            if (petriflowElement.isEnclosedByRectangle(newRect)) {\n                petriflowElement.setSelected(true);\n                petriflowElement.activate();\n            }\n        });\n    }\n\n    copyElements(from: CanvasElementCollection, to: CanvasElementCollection, append = false): CanvasElementCollection {\n        if (!append) {\n            to = new CanvasElementCollection();\n            to.places = from.places.filter(place => place.isSelected());\n            to.transitions = from.transitions.filter(place => place.isSelected());\n            to.arcs = from.arcs.filter(place => place.isSelected());\n        } else {\n            from.places.forEach(place => to.places.push(place));\n            from.transitions.forEach(place => to.transitions.push(place));\n            from.arcs.forEach(place => to.arcs.push(place));\n        }\n        return to;\n    }\n\n    get panzoom(): PanZoom | undefined {\n        return this._panzoom;\n    }\n\n    set panzoom(value: PanZoom | undefined) {\n        this._panzoom = value;\n    }\n\n    getPanZoomOffset(): Transform | undefined {\n        return this?._panzoom?.getTransform();\n    }\n\n    selectAll() {\n        this.petriflowElementsCollection.all.forEach(element => {\n            element.select();\n        });\n    }\n\n    deselectAll() {\n        this.petriflowElementsCollection.all.forEach(element => {\n            element.deselect();\n        });\n    }\n\n    get canvas(): PetriflowCanvas | undefined {\n        return this._canvas;\n    }\n\n    set canvas(value: PetriflowCanvas | undefined) {\n        this._canvas = value;\n    }\n\n    get petriflowElementsCollection(): CanvasElementCollection {\n        return this._petriflowElementsCollection;\n    }\n\n    get petriflowClipboardElementsCollection(): CanvasElementCollection {\n        return this._petriflowClipboardElementsCollection;\n    }\n\n    set petriflowClipboardElementsCollection(value: CanvasElementCollection) {\n        this._petriflowClipboardElementsCollection = value;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {\n    Arc,\n    CanvasConfiguration,\n    InhibitorArc,\n    NodeElement,\n    Place,\n    ReadArc,\n    RegularPlaceTransitionArc,\n    RegularTransitionPlaceArc,\n    ResetArc,\n    StaticPlace,\n    Transition\n} from '@netgrif/petri.svg';\nimport {PetriflowCanvasService} from '../petriflow-canvas.service';\nimport {PetriflowPlace} from '../svg-elements/petriflow-place';\nimport {PetriflowTransition} from '../svg-elements/petriflow-transition';\nimport {PetriflowPlaceTransitionArc} from '../svg-elements/arcs/petriflow-place-transition-arc';\nimport {PetriflowTransitionPlaceArc} from '../svg-elements/arcs/petriflow-transition-place-arc';\nimport {PetriflowResetArc} from '../svg-elements/arcs/petriflow-reset-arc';\nimport {PetriflowReadArc} from '../svg-elements/arcs/petriflow-read-arc';\nimport {PetriflowInhibitorArc} from '../svg-elements/arcs/petriflow-inhibitor-arc';\nimport {PetriflowNode} from '../svg-elements/petriflow-node';\nimport {PetriflowArc} from '../svg-elements/petriflow-arc';\nimport {PetriflowCanvasConfiguration} from '../petriflow-canvas-configuration';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PetriflowCanvasFactoryService {\n\n    private _source: PetriflowNode<NodeElement> | undefined;\n    private _arcLine: SVGElement | undefined;\n\n    constructor(private _petriflowCanvasService: PetriflowCanvasService) {\n    }\n\n    createPlace(marking: number, position: DOMPoint): PetriflowPlace {\n        const place = new Place(`p${++PetriflowCanvasConfiguration.PLACE_ID_COUNTER}`, `p${PetriflowCanvasConfiguration.PLACE_ID_COUNTER}`, marking, position);\n        const petriflowPlace = new PetriflowPlace(place);\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        this._petriflowCanvasService.canvas.add(place);\n        this._petriflowCanvasService.petriflowElementsCollection.places.push(petriflowPlace);\n        return petriflowPlace;\n    }\n\n    createStaticPlace(marking: number, position: DOMPoint): PetriflowPlace {\n        const place = new StaticPlace(`p${++PetriflowCanvasConfiguration.PLACE_ID_COUNTER}`, `p${PetriflowCanvasConfiguration.PLACE_ID_COUNTER}`, marking, position);\n        const petriflowPlace = new PetriflowPlace(place);\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        this._petriflowCanvasService.canvas.add(place);\n        this._petriflowCanvasService.petriflowElementsCollection.places.push(petriflowPlace);\n        return petriflowPlace;\n    }\n\n    createTransition(position: DOMPoint, icon?: string): PetriflowTransition {\n        const transition = new Transition(`t${++PetriflowCanvasConfiguration.TRANSITION_ID_COUNTER}`, `t${PetriflowCanvasConfiguration.TRANSITION_ID_COUNTER}`, position);\n        const petriflowTransition = new PetriflowTransition(transition, icon);\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        this._petriflowCanvasService.canvas.add(transition);\n        this._petriflowCanvasService.petriflowElementsCollection.transitions.push(petriflowTransition);\n        return petriflowTransition;\n    }\n\n    addArc(element: PetriflowNode<NodeElement>, type: string): PetriflowArc<Arc> | SVGElement | undefined {\n        if (!this._source) return undefined;\n        if (this._source.canvasElement instanceof Place) {\n            switch (type) {\n                case 'arc': {\n                    return this.createArcByGenericType(element, PetriflowPlaceTransitionArc, RegularPlaceTransitionArc, RegularPlaceTransitionArc.ID);\n                }\n                case 'resetarc': {\n                    return this.createArcByGenericType(element, PetriflowResetArc, ResetArc, ResetArc.ID);\n                }\n                case 'inhibitor': {\n                    return this.createArcByGenericType(element, PetriflowInhibitorArc, InhibitorArc, InhibitorArc.ID);\n                }\n                case 'read': {\n                    return this.createArcByGenericType(element, PetriflowReadArc, ReadArc, ReadArc.ID);\n                }\n                default: {\n                    return undefined;\n                }\n            }\n        } else if (type === 'arc') {\n            return this.createArcByGenericType(element, PetriflowTransitionPlaceArc, RegularTransitionPlaceArc, RegularTransitionPlaceArc.ID);\n        } else {\n            return undefined;\n        }\n    }\n\n    // @ts-ignore\n    private createArcByGenericType<T extends PetriflowArc<Arc>, A extends Arc>(element: PetriflowNode<NodeElement>, type: new(...args) => T, typeArc: new(...args) => A, arrow: string): PetriflowArc<Arc> | SVGElement | undefined {\n        if (!this._arcLine) {\n            this._source = element;\n            return this.createSvgArc(element, arrow);\n        } else if (element.constructor !== this._source?.constructor) {\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            if(!this.arcLine) return undefined;\n            this._petriflowCanvasService.canvas.container.removeChild(this.arcLine);\n            this.arcLine = undefined;\n            const arc: A = this.createArc(typeArc, this._source?.canvasElement, element.canvasElement, []);\n            const petriflowArc: T = this.createArc(type, arc);\n\n            this._petriflowCanvasService.canvas.container.appendChild(arc.container);\n            this._petriflowCanvasService.petriflowElementsCollection.arcs.push(petriflowArc);\n            this._source = undefined;\n            this._arcLine = undefined;\n            return petriflowArc;\n        } else {\n            return undefined;\n        }\n    }\n\n    // @ts-ignore\n    createArc<T>(type: new(...args) => T, ...params): T {\n        return new type(...params);\n    }\n\n    createSvgArc(element: PetriflowNode<NodeElement>, arrowUrl: string): SVGElement {\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        const arcLine = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'polyline') as SVGPolylineElement;\n        arcLine.setAttributeNS(null, 'fill', 'none');\n        arcLine.setAttributeNS(null, 'stroke', 'black');\n        arcLine.setAttributeNS(null, 'stroke-width', '2');\n        arcLine.setAttributeNS(null, 'marker-end', `url(#${arrowUrl})`);\n        arcLine.setAttributeNS(null, 'points', `${element.getPosition().x},${element.getPosition().y} ${element.getPosition().x},${element.getPosition().y}`);\n        this._petriflowCanvasService.canvas.container.appendChild(arcLine);\n        this.arcLine = arcLine;\n        return arcLine;\n    }\n\n    get arcLine(): SVGElement | undefined {\n        return this._arcLine;\n    }\n\n    set arcLine(value: SVGElement | undefined) {\n        this._arcLine = value;\n    }\n\n    get source(): PetriflowNode<NodeElement> | undefined {\n        return this._source;\n    }\n\n    set source(value: PetriflowNode<NodeElement> | undefined) {\n        this._source = value;\n    }\n}\n","export enum CanvasMode {\n    SELECT = 'select',\n    LASSO = 'lasso',\n    CREATE_TRANSITION = 'transition',\n    CREATE_PLACE = 'place',\n    CREATE_REGULAR_ARC = 'arc',\n    CREATE_RESET_ARC = 'resetarc',\n    CREATE_INHIBITOR_ARC = 'inhibitor',\n    CREATE_READ_ARC = 'read',\n    MOVE = 'move',\n    REMOVE = 'remove',\n}\n","import {Injectable} from '@angular/core';\nimport {PetriflowCanvasService} from '../petriflow-canvas.service';\nimport {PetriflowCanvasFactoryService} from '../factories/petriflow-canvas-factory.service';\nimport {CanvasMode} from '../canvas-mode';\nimport {Arc, CanvasConfiguration, NodeElement} from '@netgrif/petri.svg';\nimport {PetriflowPlace} from '../svg-elements/petriflow-place';\nimport {MatToolbar} from '@angular/material/toolbar';\nimport {CanvasElementCollection} from '../domain/canvas-element-collection';\nimport {PetriflowNode} from '../svg-elements/petriflow-node';\nimport {PetriflowTransition} from '../svg-elements/petriflow-transition';\nimport {PetriflowArc} from '../svg-elements/petriflow-arc';\nimport {PetriflowCanvasElement} from '../svg-elements/petriflow-canvas-element';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PetriflowCanvasConfigurationService {\n\n    private arcTypes = ['arc', 'resetarc', 'inhibitor', 'read'];\n\n    private _mode: CanvasMode | undefined;\n    private _arcLine: SVGElement | undefined;\n    private mouseDown = false;\n    private mouseX = 0;\n    private mouseY = 0;\n    private rectangle: SVGElement | undefined;\n    private _source: PetriflowNode<NodeElement> | undefined;\n    private _toolbar: MatToolbar | undefined;\n    private _clipboardBox: DOMRect | undefined;\n    private _clipboard: SVGElement | undefined;\n\n    private _breakpoint: DOMPoint;\n    private _selectedArc: PetriflowArc<Arc> | undefined;\n\n    constructor(private _petriflowCanvasFactory: PetriflowCanvasFactoryService,\n                private _petriflowCanvasService: PetriflowCanvasService) {\n        this._breakpoint = new DOMPoint();\n    }\n\n    get mode(): CanvasMode | undefined {\n        return this._mode;\n    }\n\n    set mode(value: CanvasMode | undefined) {\n        this._mode = value;\n    }\n\n    get toolbar(): MatToolbar | undefined {\n        return this._toolbar;\n    }\n\n    addCanvasEvent(svg: SVGGElement, toolbar: MatToolbar) {\n        this._toolbar = toolbar;\n        svg.onmousemove = (e) => {\n            if (this._arcLine) {\n                this.moveArc(e);\n            }\n            this.moveElement(e);\n            this.moveBreakpoint(e);\n            if (this.mouseDown && this.mode === CanvasMode.LASSO) {\n                if (!this._petriflowCanvasService.canvas)\n                    throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n                this._petriflowCanvasService.deselectAll();\n                this._petriflowCanvasService.canvas.svg.deselectAll();\n                const offset = this._petriflowCanvasService.getPanZoomOffset();\n                const width = (e.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1) - this.mouseX;\n                const height = (e.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1) - this.mouseY;\n                const newX = width > 0 ? this.mouseX : this.mouseX + width;\n                const newY = height > 0 ? this.mouseY : this.mouseY + height;\n                if (!this.rectangle)\n                    throw new Error(\"SVGElement is not set\");\n                this.rectangle.setAttributeNS(null, 'width', `${Math.abs(width)}`);\n                this.rectangle.setAttributeNS(null, 'height', `${Math.abs(height)}`);\n                this.rectangle.setAttributeNS(null, 'x', `${newX}`);\n                this.rectangle.setAttributeNS(null, 'y', `${newY}`);\n            }\n            this.onCanvasMouseMoveClipboard(e);\n        };\n        svg.onmousedown = (e) => {\n            e.preventDefault();\n            if (this.mode === CanvasMode.LASSO) {\n                this._petriflowCanvasService.deselectAll();\n                this.mouseDown = true;\n                const offset = this._petriflowCanvasService.getPanZoomOffset();\n                this.rectangle = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'rect') as SVGElement;\n                this.rectangle.setAttributeNS(null, 'fill', 'none');\n                this.rectangle.setAttributeNS(null, 'class', 'path');\n                this.rectangle.setAttributeNS(null, 'stroke', 'black');\n                this.rectangle.setAttributeNS(null, 'stroke-width', '1');\n                this.rectangle.setAttributeNS(null, 'animation', 'dash 5s linear');\n                this.mouseX = (e.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1);\n                this.mouseY = (e.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1);\n                this.rectangle.setAttributeNS(null, 'x', `${this.mouseX}`);\n                this.rectangle.setAttributeNS(null, 'y', `${this.mouseY}`);\n                if (!this._petriflowCanvasService.canvas)\n                    throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n                this._petriflowCanvasService.canvas.container.appendChild(this.rectangle);\n            }\n            this.onMouseMoveDownDestroyClipboard();\n        };\n        svg.onmouseup = (e) => {\n            e.preventDefault();\n            if (this.mode === CanvasMode.LASSO && this.rectangle) {\n                this._petriflowCanvasService.setSelectedByRectangleEnclosure(this.rectangle);\n                this.mouseDown = false;\n                if (!this._petriflowCanvasService.canvas)\n                    throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n                this._petriflowCanvasService.canvas.container.removeChild(this.rectangle);\n                this.rectangle = undefined;\n            }\n        };\n        svg.onmouseleave = () => {\n            this.deleteClipboard();\n        };\n    }\n\n    // Transition Events\n    addTransitionEvents(petriflowTransition: PetriflowTransition): void {\n        petriflowTransition.setOnClick((element) => {\n            this.attachCanvasElementOnClickFunctions(element as PetriflowNode<NodeElement>);\n        });\n    }\n\n    // Place Events\n    addPlaceEvents(petriflowPlace: PetriflowPlace): void {\n        petriflowPlace.setOnClick((element) => {\n            this.attachCanvasElementOnClickFunctions(element as PetriflowNode<NodeElement>);\n        });\n        petriflowPlace.setOnTokenClickEvent((element) => {\n            this.attachCanvasElementOnClickFunctions(element as PetriflowNode<NodeElement>);\n        });\n    }\n\n    private attachCanvasElementOnClickFunctions(element: PetriflowNode<NodeElement>) {\n        this.addArc(element);\n        this.selectElement(element);\n        this.deleteElement(element);\n        this.multipleSelectElement(element);\n    }\n\n    // Arc Events\n    addArcEvents(arc: PetriflowArc<Arc>) {\n        arc.setOnClick((element, e) => {\n            this.deleteArc(element as PetriflowArc<Arc>);\n            this.createBreakpoint(e as MouseEvent, element as PetriflowArc<Arc>);\n            this.multipleSelectElement(element);\n        });\n    }\n\n    private addArc(element: PetriflowNode<NodeElement>) {\n        if (!this._arcLine && this.arcTypes.includes(this._mode as string)) {\n            this._source = element;\n            this._petriflowCanvasFactory.source = element;\n            this._arcLine = this._petriflowCanvasFactory.addArc(element, this._mode as string) as SVGElement;\n        } else if (this._arcLine) {\n            const arc = this._petriflowCanvasFactory.addArc(element, this._mode as string) as PetriflowArc<Arc>;\n            if (arc) {\n                this._source = undefined;\n                this._arcLine = undefined;\n                this.addArcEvents(arc);\n            }\n        }\n    }\n\n    private selectElement(element: PetriflowNode<NodeElement>) {\n        if (this._mode === CanvasMode.MOVE) {\n            if (!this._petriflowCanvasFactory.source && this._petriflowCanvasService.petriflowElementsCollection.selected.length === 0) {\n                this._petriflowCanvasFactory.source = element;\n            } else {\n                this._petriflowCanvasFactory.source = undefined;\n            }\n        }\n    }\n\n    private multipleSelectElement(element: PetriflowCanvasElement) {\n        if (this._mode === CanvasMode.MOVE) {\n            if (this._petriflowCanvasService.petriflowElementsCollection.selected.length > 1 &&\n                this._petriflowCanvasService.petriflowElementsCollection.selected.includes(element as PetriflowNode<NodeElement>)) {\n                this.initialiseClipboard();\n                this._petriflowCanvasService.petriflowElementsCollection.selected.forEach(selectedElement => {\n                    this.clipboard?.appendChild(selectedElement.canvasElement.container);\n                });\n                this._petriflowCanvasService.petriflowElementsCollection.arcs.filter(arc => arc.isSelected()).forEach(selectedElement => {\n                    this.clipboard?.appendChild(selectedElement.element.container);\n                });\n                if (!this._petriflowCanvasService.canvas)\n                    throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n                if (this.clipboard) {\n                    this._petriflowCanvasService.canvas.container.appendChild(this.clipboard);\n                    this._clipboardBox = this.clipboard.getBoundingClientRect();\n                }\n            }\n        }\n    }\n\n    private moveElement(e: MouseEvent) {\n        if (this._mode === CanvasMode.MOVE && this._petriflowCanvasFactory.source && !this.clipboard) {\n            const offsetPanZoom = this._petriflowCanvasService.getPanZoomOffset();\n            this._petriflowCanvasFactory.source.canvasElement.move(\n                new DOMPoint((e.offsetX - (offsetPanZoom?.x ?? 0)) / (offsetPanZoom?.scale ?? 1),\n                    (e.offsetY - (offsetPanZoom?.y ?? 0)) / (offsetPanZoom?.scale ?? 1)));\n        }\n    }\n\n    private moveArc(e: MouseEvent) {\n        const offsetPanZoom = this._petriflowCanvasService.getPanZoomOffset();\n        if (!this._source) return;\n        const intersect = this._source.canvasElement.getEdgeIntersection(\n            new DOMPoint((e.offsetX - (offsetPanZoom?.x ?? 0)) / (offsetPanZoom?.scale ?? 1),\n                (e.offsetY - (offsetPanZoom?.y ?? 0)) / (offsetPanZoom?.scale ?? 1)), 0);\n        const xLineLength = ((e.offsetX - (offsetPanZoom?.x ?? 0)) / (offsetPanZoom?.scale ?? 1)) - intersect.x;\n        const yLineLength = ((e.offsetY - (offsetPanZoom?.y ?? 0)) / (offsetPanZoom?.scale ?? 1)) - intersect.y;\n        const arcLength = Math.sqrt(xLineLength * xLineLength + yLineLength * yLineLength);\n        const arcLengthOffset = arcLength - CanvasConfiguration.ARROW_HEAD_SIZE;\n        const arcRatio = arcLengthOffset / arcLength;\n        const finalX = intersect.x + xLineLength * arcRatio;\n        const finalY = intersect.y + yLineLength * arcRatio;\n        if (!this._arcLine)\n            throw new Error(\"Arc line is not set!\");\n        this._arcLine.setAttributeNS(null, 'points', `${intersect.x},${intersect.y} ${finalX},${finalY}`);\n    }\n\n    private deleteElement(element: PetriflowNode<NodeElement>) {\n        if (this._mode === CanvasMode.REMOVE) {\n            const removedArcs: Array<Arc> = [];\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            element.canvasElement.arcs.forEach(arc => {\n                    this._petriflowCanvasService?.canvas?.remove(arc);\n                    removedArcs.push(arc);\n                }\n            );\n            this._petriflowCanvasService.petriflowElementsCollection.nodes.forEach(petriflowElement => {\n                petriflowElement.canvasElement.deleteArcs(removedArcs);\n            });\n            this._petriflowCanvasService.canvas.remove(element.canvasElement);\n        }\n    }\n\n    private deleteArc(petriflowElement: PetriflowArc<Arc>) {\n        if (this._mode === CanvasMode.REMOVE) {\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            this._petriflowCanvasService.canvas.remove(petriflowElement.element);\n        }\n    }\n\n    pasteElements() {\n        this.initialiseClipboard();\n\n        let clipboardContent = [...this._petriflowCanvasService.petriflowClipboardElementsCollection.nodes];\n        this.pasteElementsFromCollection(this._petriflowCanvasService.petriflowClipboardElementsCollection.places);\n        this.pasteElementsFromCollection(this._petriflowCanvasService.petriflowClipboardElementsCollection.transitions);\n\n        const arcsCollection = this._petriflowCanvasService.petriflowClipboardElementsCollection.arcs;\n        const length = arcsCollection.length;\n        arcsCollection.forEach(element => {\n            const newElement = this.createArcByDeterminedType(element, clipboardContent);\n            this.clipboard?.appendChild(newElement.element.container);\n            arcsCollection.push(newElement);\n        });\n        arcsCollection.splice(0, length);\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        clipboardContent = [];\n        if (this.clipboard) {\n            this._petriflowCanvasService.canvas.container.appendChild(this.clipboard);\n            this._clipboardBox = this.clipboard?.getBoundingClientRect();\n        }\n    }\n\n    private pasteElementsFromCollection(collection: Array<PetriflowNode<NodeElement>>) {\n        const length = collection.length;\n        collection.forEach(element => {\n            const newElement = element.clone();\n            this.clipboard?.appendChild(newElement.canvasElement.container);\n            collection.push(newElement);\n        });\n        collection.splice(0, length);\n    }\n\n    private onMouseMoveDownDestroyClipboard() {\n        if (this.clipboard && this._clipboardBox && this.mode === CanvasMode.LASSO) {\n            this.destroyAndReduceClipboard();\n        } else if (this.clipboard && this._clipboardBox && this.mode === CanvasMode.MOVE) {\n            this.destroyAndMoveElements();\n        }\n    }\n\n    private createArcByDeterminedType(petriflowArc: PetriflowArc<Arc>, clipboardContent: Array<PetriflowNode<NodeElement>>): PetriflowArc<Arc> {\n        const source = petriflowArc.element.start;\n        const destination = petriflowArc.element.end;\n        const startIndex = clipboardContent.findIndex(startElement => {\n            return source.container === startElement.canvasElement.container;\n        });\n        const endIndex = clipboardContent.findIndex(endElement => {\n            return destination.container === endElement.canvasElement.container;\n        });\n        return petriflowArc.cloneArc(this._petriflowCanvasService.petriflowClipboardElementsCollection.nodes[startIndex].canvasElement,\n            this._petriflowCanvasService.petriflowClipboardElementsCollection.nodes[endIndex].canvasElement);\n    }\n\n    private onCanvasMouseMoveClipboard(event: MouseEvent) {\n        if (this.clipboard && this._clipboardBox) {\n            const offset = this._petriflowCanvasService.getPanZoomOffset();\n            const mouseX = (event.x - (offset?.x ?? 0)) / (offset?.scale ?? 1) - (this._clipboardBox.x + this._clipboardBox.width / 2 - (offset?.x ?? 0)) / (offset?.scale ?? 1);\n            const mouseY = (event.y - (offset?.y ?? 0)) / (offset?.scale ?? 1) - (this._clipboardBox.y + this._clipboardBox.height / 2 - (offset?.y ?? 0)) / (offset?.scale ?? 1);\n            this.clipboard.setAttribute('transform', `matrix(1,0,0,1,${mouseX},${mouseY})`);\n        }\n    }\n\n    deleteSelectedElements() {\n        this.deleteSelectedCollection(this._petriflowCanvasService.petriflowElementsCollection.places);\n        this.deleteSelectedCollection(this._petriflowCanvasService.petriflowElementsCollection.transitions);\n    }\n\n    deleteSelectedCollection(collection: Array<PetriflowNode<NodeElement>>) {\n        let removedArcs: Array<Arc> = [];\n        collection.filter(element => element.isSelected()).forEach(selectedElement => {\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            selectedElement.canvasElement.arcs.forEach(arc => {\n                this._petriflowCanvasService?.canvas?.remove(arc);\n                removedArcs.push(arc);\n            });\n            this._petriflowCanvasService.petriflowElementsCollection.nodes.forEach(petriflowElement => petriflowElement.canvasElement.deleteArcs(removedArcs));\n            removedArcs.forEach(arc => {\n                this._petriflowCanvasService.petriflowElementsCollection.arcs.splice(\n                    this._petriflowCanvasService.petriflowElementsCollection.arcs.findIndex(petriflowArc => petriflowArc.element === arc), 1);\n            });\n            removedArcs = [];\n            this._petriflowCanvasService.canvas.remove(selectedElement.canvasElement);\n            collection.splice(collection.indexOf(selectedElement), 1);\n        });\n    }\n\n    initialiseClipboard() {\n        this.clipboard = document.createElementNS(CanvasConfiguration.SVG_NAMESPACE, 'g') as SVGGElement;\n        this.clipboard.id = 'petri-svg-clipboard';\n    }\n\n    destroyAndReduceClipboard() {\n        const matrix = (this.clipboard as SVGSVGElement).transform?.baseVal[0]?.matrix;\n        this.copyFromClipboardToCollection(matrix, this._petriflowCanvasService.petriflowClipboardElementsCollection.places,\n            this._petriflowCanvasService.petriflowElementsCollection.places);\n        this.copyFromClipboardToCollection(matrix, this._petriflowCanvasService.petriflowClipboardElementsCollection.transitions,\n            this._petriflowCanvasService.petriflowElementsCollection.transitions);\n        this._petriflowCanvasService.petriflowClipboardElementsCollection.arcs.forEach(copyElement => {\n            copyElement.moveBy(matrix.e, matrix.f);\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            this._petriflowCanvasService.canvas.container.appendChild(copyElement.element.container);\n            this._petriflowCanvasService.petriflowElementsCollection.arcs.push(copyElement);\n        });\n        this.deleteClipboard();\n    }\n\n    private copyFromClipboardToCollection(matrix: SVGMatrix, collectionFrom: Array<PetriflowNode<NodeElement>>, collectionTo: Array<PetriflowNode<NodeElement>>) {\n        collectionFrom.forEach(copyElement => {\n            copyElement.moveBy(matrix.e, matrix.f);\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            this._petriflowCanvasService.canvas.add(copyElement.canvasElement);\n            collectionTo.push(copyElement);\n        });\n    }\n\n    destroyAndMoveElements() {\n        const matrix = (this.clipboard as SVGSVGElement).transform?.baseVal[0]?.matrix;\n        this._petriflowCanvasService.petriflowElementsCollection.selected.forEach(copyElement => {\n            copyElement.moveBy(matrix.e, matrix.f);\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            this._petriflowCanvasService.canvas.add(copyElement.canvasElement);\n        });\n        this._petriflowCanvasService.petriflowElementsCollection.arcs.filter(arc => arc.isSelected()).forEach(copyElement => {\n            copyElement.moveBy(matrix.e, matrix.f);\n            if (!this._petriflowCanvasService.canvas)\n                throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n            this._petriflowCanvasService.canvas.container.appendChild(copyElement.element.container);\n        });\n        this.deleteClipboard();\n    }\n\n    deleteClipboard() {\n        if (!this._petriflowCanvasService.canvas)\n            throw new Error(\"SVG canvas for petriflow objects doesn't exists!\");\n        if (this.clipboard) {\n            this._petriflowCanvasService.canvas.container.removeChild(this.clipboard);\n            this.clipboard = undefined;\n            this._petriflowCanvasService.petriflowClipboardElementsCollection = new CanvasElementCollection();\n        }\n        if (this.rectangle) {\n            this.mouseDown = false;\n            this._petriflowCanvasService.canvas.container.removeChild(this.rectangle);\n            this.rectangle = undefined;\n        }\n        if (this._arcLine) {\n            this._petriflowCanvasService.canvas.container.removeChild(this._arcLine);\n            this._petriflowCanvasFactory.arcLine = undefined;\n            this._arcLine = undefined;\n            this.mouseDown = false;\n        }\n    }\n\n    get clipboard(): SVGElement | undefined {\n        return this._clipboard;\n    }\n\n    set clipboard(value: SVGElement | undefined) {\n        this._clipboard = value;\n    }\n\n    private createBreakpoint(e: MouseEvent, arc: PetriflowArc<Arc>) {\n        if (this.mode === CanvasMode.MOVE && !this._selectedArc) {\n            const offset = this._petriflowCanvasService.getPanZoomOffset();\n            const mouseX = (e.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1);\n            const mouseY = (e.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1);\n            const newBreakpoint = new DOMPoint(mouseX, mouseY);\n            arc.element.linePoints.splice(this.getBreakpointIndex(newBreakpoint, arc.element), 0, newBreakpoint);\n            arc.element.move(arc.element.start, arc.element.end);\n            this._breakpoint = newBreakpoint;\n            this._selectedArc = arc;\n        } else if (this.mode === CanvasMode.MOVE && this._selectedArc) {\n            this._breakpoint = new DOMPoint();\n            this._selectedArc = undefined;\n        }\n    }\n\n    private getBreakpointIndex(newBreakpoint: DOMPoint, arc: Arc): number {\n        const arcPoints = [...arc.linePoints, arc.end.position];\n        const arcPointsLength = arcPoints.length;\n        if (arcPointsLength) {\n            for (let i = 0; i < arcPointsLength - 1; i++) {\n                const breakpointOffset = this.getDistanceBetweenPoints(arcPoints[i], arcPoints[i + 1])\n                    - (this.getDistanceBetweenPoints(arcPoints[i], newBreakpoint)\n                        + this.getDistanceBetweenPoints(newBreakpoint, arcPoints[i + 1]));\n                if (Math.abs(breakpointOffset) <= 2) {\n                    return i + 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    private getDistanceBetweenPoints(pointStart: DOMPoint, pointEnd: DOMPoint): number {\n        return Math.sqrt(Math.pow(pointEnd.x - pointStart.x, 2) + Math.pow(pointEnd.y - pointStart.y, 2));\n    }\n\n    private moveBreakpoint(e: MouseEvent) {\n        if (this.mode === CanvasMode.MOVE && this._breakpoint) {\n            const offset = this._petriflowCanvasService.getPanZoomOffset();\n            const mouseX = (e.offsetX - (offset?.x ?? 0)) / (offset?.scale ?? 1);\n            const mouseY = (e.offsetY - (offset?.y ?? 0)) / (offset?.scale ?? 1);\n            this._breakpoint.x = mouseX;\n            this._breakpoint.y = mouseY;\n            this._selectedArc?.element.move(this._selectedArc.element.start, this._selectedArc.element.end);\n        }\n    }\n}\n","/* ARCS */\nexport * from './arcs/public-api';\n\n/* OBJECTS */\nexport * from './petriflow-arc';\nexport * from './petriflow-node';\nexport * from './petriflow-place';\nexport * from './petriflow-transition';\nexport * from './petriflow-canvas-element';\n","import {ArrowArcEnd, Canvas, DoubleArrowArcEnd, EmptyCircleArcEnd, FullCircleArcEnd} from '@netgrif/petri.svg';\n\nexport class PetriflowCanvas extends Canvas {\n\n    constructor(svg: SVGSVGElement) {\n        super(svg);\n        this.register(new ArrowArcEnd());\n        this.register(new EmptyCircleArcEnd());\n        this.register(new FullCircleArcEnd());\n        this.register(new DoubleArrowArcEnd());\n    }\n}\n","import {AfterViewInit, Component, ElementRef, HostListener, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {PetriflowCanvasService} from './petriflow-canvas.service';\nimport createPanZoom from 'panzoom';\nimport {PetriflowCanvasConfigurationService} from './services/petriflow-canvas-configuration.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {PetriflowCanvas} from './petriflow-canvas';\nimport {PetriflowCanvasConfiguration} from './petriflow-canvas-configuration';\n\n@Component({\n    selector: 'petriflow-svg-canvas',\n    templateUrl: './petriflow-canvas.component.html',\n    styles: [],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PetriflowCanvasComponent implements AfterViewInit {\n\n    @ViewChild('canvas') canvasElement: ElementRef | undefined;\n    private _canvas: PetriflowCanvas | undefined;\n    private _mouseEvent: MouseEvent | undefined;\n\n    constructor(private _canvasService: PetriflowCanvasService, private _canvasConfig: PetriflowCanvasConfigurationService,\n                private _snackBar: MatSnackBar) {\n    }\n\n    ngAfterViewInit() {\n        this._canvas = new PetriflowCanvas(this.canvasElement?.nativeElement);\n        this._canvasService.canvas = this._canvas;\n        this._canvasService.panzoom = createPanZoom(this._canvas.container);\n    }\n\n    get canvas(): PetriflowCanvas | undefined {\n        return this._canvas;\n    }\n\n    @HostListener('window:keydown.control.c', ['$event'])\n    onControlC($event: KeyboardEvent) {\n        $event.preventDefault();\n        this.openSnackBar('Canvas elements copied to clipboard');\n        this._canvasService.petriflowClipboardElementsCollection = this._canvasService.copyElements(this._canvasService.petriflowElementsCollection,\n            this._canvasService.petriflowClipboardElementsCollection);\n    }\n\n    @HostListener('window:keydown.control.v', ['$event'])\n    onControlV($event: KeyboardEvent) {\n        $event.preventDefault();\n        this._canvasConfig.pasteElements();\n    }\n\n    @HostListener('window:keydown.control.a', ['$event'])\n    onControlA($event: KeyboardEvent) {\n        $event.preventDefault();\n        this.openSnackBar('Selected all petri-svg elements');\n        this._canvasService.selectAll();\n    }\n\n    @HostListener('window:keydown.delete', ['$event'])\n    onDelete() {\n        this.openSnackBar('All selected petri-svg elements deleted');\n        this._canvasConfig.deleteSelectedElements();\n    }\n\n    @HostListener('window:keydown.escape', ['$event'])\n    onEscape() {\n        this._canvasService.deselectAll();\n        this._canvasConfig.deleteClipboard();\n    }\n\n    @HostListener('window:keydown.+', ['$event'])\n    onPlusButton() {\n        this._canvasService.panzoom?.smoothZoom(this._mouseEvent?.x ?? 0, this._mouseEvent?.y ?? 0, PetriflowCanvasConfiguration.PANZOOM_ZOOM_IN_MULTIPLIER);\n    }\n\n    @HostListener('window:keydown.-', ['$event'])\n    onMinusButton() {\n        this._canvasService.panzoom?.smoothZoom(this._mouseEvent?.x ?? 0, this._mouseEvent?.y ?? 0, PetriflowCanvasConfiguration.PANZOOM_ZOOM_OUT_MULTIPLIER);\n    }\n\n    @HostListener('window:keydown.ArrowUp', ['$event'])\n    onUpButton() {\n        this._canvasService.panzoom?.moveBy(0, PetriflowCanvasConfiguration.PANZOOM_MOVE, false);\n    }\n\n    @HostListener('window:keydown.ArrowRight', ['$event'])\n    onRightButton() {\n        this._canvasService.panzoom?.moveBy(-PetriflowCanvasConfiguration.PANZOOM_MOVE, 0, false);\n    }\n\n    @HostListener('window:keydown.ArrowDown', ['$event'])\n    onDownButton() {\n        this._canvasService.panzoom?.moveBy(0, -PetriflowCanvasConfiguration.PANZOOM_MOVE, false);\n    }\n\n    @HostListener('window:keydown.ArrowLeft', ['$event'])\n    onLeftButton() {\n        this._canvasService.panzoom?.moveBy(PetriflowCanvasConfiguration.PANZOOM_MOVE, 0, false);\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onMouseMove($event: MouseEvent) {\n        this._mouseEvent = $event;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, undefined, {duration: 1000});\n    }\n}\n","<svg #canvas width=\"100%\" height=\"100%\" style=\"width: 100%; height: 100%\">\n</svg>\n","import {NgModule} from '@angular/core';\nimport {PetriflowCanvasComponent} from './petriflow-canvas.component';\n\n@NgModule({\n    declarations: [PetriflowCanvasComponent],\n    imports: [],\n    exports: [PetriflowCanvasComponent]\n})\nexport class PetriflowCanvasModule {\n}\n","/*\n * Public API Surface of petriflow-petri-svg\n */\n\nexport * from './lib/public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Component","ViewChild","CanvasMode","PetriflowCanvasConfigurationService","PetriflowCanvasFactoryService","PetriflowCanvasService","MatToolbar","MatDialog","PetriflowInfoDialogComponent","AppComponent","_petriflowCanvasService","_petriflowFactoryService","_petriflowConfigService","dialog","_mode","mode","canvas","Error","svg","onclick","e","addTransition","addPlace","toolbar","addCanvasEvent","_elementRef","nativeElement","onmouseenter","deleteClipboard","$event","CREATE_TRANSITION","offset","getPanZoomOffset","transition","createTransition","DOMPoint","offsetX","x","_a","scale","_b","offsetY","y","_c","_d","addTransitionEvents","CREATE_PLACE","place","createPlace","addPlaceEvents","arcLine","container","removeChild","source","undefined","panzoomEnabled","disablePreviousArcMode","panzoom","isPaused","resume","pause","url","window","open","moveTo","zoomAbs","args","selector","template","BrowserModule","DomSanitizer","NgModule","BrowserAnimationsModule","FlexLayoutModule","RouterModule","JoyrideModule","PetriflowCanvasModule","MatIconModule","MatIconRegistry","MatButtonModule","MatButtonToggleModule","MatToolbarModule","MatDialogModule","MatSnackBarModule","HttpClientModule","appRoutes","path","component","redirectTo","AppModule","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","declarations","imports","forRoot","entryComponents","bootstrap","environment","production","deployUrl","enableProdMode","platformBrowserDynamic","bootstrapModule","catch","console","error","err","CanvasConfiguration","SVG_NAMESPACE","ACTIVE","INACTIVE","RADIUS","SIZE","ICON_SIZE","TOKEN_RADIUS","TOKEN_OFFSET","FAMILY","SIZE_OFFSET","ARROW_HEAD_SIZE","WEIGHT_OFFSET","Container","constructor","this","_container","document","createElementNS","value","CanvasElement","_isSelected","static","isEnclosedByRectangle","rectangle","canvasElementBox","getBBox","width","height","isSelected","setSelected","points","map","p","join","Arc","start","end","endId","linePoints","multiplicityLabel","super","_start","_end","_linePoints","_arcLineBackground","setAttributeNS","appendChild","_arcLine","_multiplicityElement","FONT","_multiplicity","createTextNode","arcs","push","length","move","activate","multiplicityElement","deactivate","position","concat","backgroundPoints","Object","assign","getEdgeIntersection","arcLinePoints","arcLinePointsTest","lastElement","middleElement","parseInt","String","getArcWeightPosition","startElement","endElement","startPointX","startPointY","endPointX","endPointY","dx","dy","Math","sqrt","unitDx","unitDy","moveBy","forEach","point","debug","arcLineBackground","multiplicity","PlaceTransitionArc","TransitionPlaceArc","ArcEnd","id","refX","refY","_arrow","arrow","ArrowArcEnd","ID","_arrowHead","CircleArcEnd","_circle","circle","DoubleArrowArcEnd","secondArrow","COLORS","EmptyCircleArcEnd","FullCircleArcEnd","InhibitorArc","createArcEnd","clone","textContent","ReadArc","ResetArc","RegularPlaceTransitionArc","RegularTransitionPlaceArc","NodeElement","_arcs","_position","_element","arc","deleteArcs","index","indexOf","splice","element","LabeledObject","label","_labelBackground","_labelElement","_label","_id","setLabelElementPosition","labelElement","labelBackground","Place","marking","_tokensCount","_markingTokens","i","toString","_markingElement","_marking","updateMarking","markingToString","tokensVisible","setElementPosition","setMarkingTokenPosition","from","offsetFrom","r","dr","x1","sgn","x2","y1","abs","y2","getIntersectionCoordinate","placeCoordinate","firstCoordinate","secondCoordinate","n","TOKEN_OFFSETS","nodeValue","fill","TOKEN_LAYOUTS","markingTokens","markingElement","tokensCount","data","StaticPlace","setStaticPlaceAttributes","EmptyNode","Transition","squareHalfSiteLength","tanTheta","Infinity","quadrantX","sign","quadrantY","setEnabled","firing","setDisabled","cancelArrowPoints","arrowPoints","finishArrowPoints","orientation","x3","pointsToString","Canvas","_svg","_defs","add","object","remove","removeAll","childNodes","register","arcEnd","CanvasElementCollection","_places","_transitions","nodes","filter","node","defaultPlace","defaultTransition","EMPTY_FUNCTION","PetriflowNode","canvasElement","_canvasElement","onmouseleave","_onClickEvent","event","onClickEvent","PetriflowCanvasConfiguration","PetriflowPlace","setPlaceActions","markingToken","_onTokenClickEvent","svgElement","cloned","token","setOnClick","setOnTokenClickEvent","changeId","PLACE_ID_COUNTER","PetriflowTransition","icon","_cancelArrow","_finishArrow","_iconElement","_icon","setIconElementPosition","setIconFiringClass","TRANSITION_ID_COUNTER","PetriflowArc","newLinePoints","createClonedInstanceOfArc","eventFunction","PetriflowPlaceTransitionArc","PetriflowTransitionPlaceArc","PetriflowResetArc","PetriflowReadArc","PetriflowInhibitorArc","_petriflowElementsCollection","_petriflowClipboardElementsCollection","_canvas","newRect","createSVGRect","getAttribute","all","petriflowElement","to","append","places","transitions","_panzoom","getTransform","petriflowElementsCollection","select","deselect","Injectable","providedIn","petriflowPlace","petriflowTransition","type","_source","createArcByGenericType","typeArc","createSvgArc","createArc","petriflowArc","params","arrowUrl","getPosition","i1.PetriflowCanvasService","_petriflowCanvasFactory","arcTypes","mouseDown","mouseX","mouseY","_breakpoint","_toolbar","onmousemove","moveArc","moveElement","moveBreakpoint","LASSO","deselectAll","newX","newY","onCanvasMouseMoveClipboard","onmousedown","preventDefault","onMouseMoveDownDestroyClipboard","onmouseup","setSelectedByRectangleEnclosure","attachCanvasElementOnClickFunctions","addArc","selectElement","deleteElement","multipleSelectElement","deleteArc","createBreakpoint","includes","addArcEvents","MOVE","selected","initialiseClipboard","clipboard","selectedElement","_clipboardBox","getBoundingClientRect","offsetPanZoom","intersect","xLineLength","_e","_f","yLineLength","_g","_h","arcLength","arcLengthOffset","arcRatio","finalX","finalY","REMOVE","removedArcs","clipboardContent","petriflowClipboardElementsCollection","pasteElementsFromCollection","arcsCollection","newElement","createArcByDeterminedType","collection","destroyAndReduceClipboard","destroyAndMoveElements","destination","startIndex","findIndex","endIndex","cloneArc","setAttribute","deleteSelectedCollection","matrix","transform","baseVal","copyFromClipboardToCollection","copyElement","f","collectionFrom","collectionTo","_clipboard","_selectedArc","newBreakpoint","getBreakpointIndex","arcPoints","arcPointsLength","breakpointOffset","getDistanceBetweenPoints","pointStart","pointEnd","pow","i1.PetriflowCanvasFactoryService","PetriflowCanvas","PetriflowCanvasComponent","_canvasService","_canvasConfig","_snackBar","createPanZoom","openSnackBar","copyElements","pasteElements","selectAll","deleteSelectedElements","_mouseEvent","PANZOOM_ZOOM_IN_MULTIPLIER","PANZOOM_ZOOM_OUT_MULTIPLIER","PANZOOM_MOVE","message","duration","styles","encapsulation","None","onControlC","HostListener","onControlV","onControlA","onDelete","onEscape","onPlusButton","onMinusButton","onUpButton","onRightButton","onDownButton","onLeftButton","onMouseMove","exports"],"sourceRoot":"webpack:///"}